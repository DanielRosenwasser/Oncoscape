source("test_AnalysisPackage.R")
runTests()
class(scores)
length(scores)
names(scores)
scores
q()
dir()
source("test_GeneSetTTests.R"); runTests()
source("test_GeneSetTTests.R"); runTests()
source("test_GeneSetTTests.R"); runTests()
q()
source("test_GeneSetTTests.R"); runTests()
dim(gstt@tbl.mrna)
q()
source("test_GeneSetTTests.R"); runTests()
q()
source("test_GeneSetTTests.R"); runTests()
q()
source("test_GeneSetTTests.R"); runTests()
dim(getExpressionData(gstt))
q()
source("test_GeneSetTTests.R"); runTests()
length(getGeneSets(gstt))
q()
source("test_GeneSetTTests.R"); runTests()
length(getGeneSets(gstt))
head(names(getGeneSets(gstt)))
x <- head(getGeneSets(gstt))
sapply(x, length)
class(sapply(x, length))
y <- sapply(x, length)
y$GOLGI_MEMBRANE
lapply(x, length)
q()
source("test_GeneSetTTests.R"); runTests()
head(getGeneSetNames(gstt))
head(getGeneSetNames(gstt), n=3)
names(head(getGeneSetLengths(gstt) < 10))
names(head(which(getGeneSetLengths(gstt) < 10)))
names(head(which(getGeneSetLengths(gstt) < 10)), n=3)
names(head(which(getGeneSetLengths(gstt) < 10), n=3))
length(which(getGeneSetLengths(gstt) <= 10))
q() 
source("test_GeneSetTTests.R"); runTests()
fivenum(tbl.ptHistory$survival)
x <- tbl.ptHistory[order(tbl.ptHistory$survival, decreasing=FALSE),]
head(x$surival)
head(x$survival)
tbl.ptHistory[1:5, 1:5]
tbl.ptHistory[order(tbl.ptHistory$survival, decreasing=FALSE),]$survival[1:5]
tbl.ptHistory[order(tbl.ptHistory$survival, decreasing=FALSE),]$ID[1:5]
tbl.ptHistory[order(tbl.ptHistory$survival, decreasing=FALSE),]$survival[1:5]
tbl.ptHistory[order(tbl.ptHistory$survival, decreasing=TRUE),]$survival[1:5]
x <- getExpressionData(gstt)
x <- getExpressionData(gstt)
x[1:5, 1:5]
all(short.survivors %in% rownames(x)
)
setdiff(short.survivors %in% rownames(x))
setdiff(short.survivors, rownames(x))
length(long.survivors)
length(intersect(long.survivors, rownames(tbl.mrna)))
length(intersect(long.survivors, rownames(getExpressionData(gstt))))
head(getGeneSetNames(gstt))
length(grep("GLIO", getGeneSetNames(gstt), ignore.case=TRUE))
grep("GLIO", getGeneSetNames(gstt), ignore.case=TRUE, value=TRUE)
length(samples.recognized)
length(samples)
x <- unlist(genesets, use.names=FALSE)
x <- unlist(getGeneSets(gstt), use.names=FALSE)
length(x)
x <- unique(unlist(getGeneSets(gstt), use.names=FALSE))
length(x)
length(test.genes)
length(intersect(test.genes, colnames(getExpressionData(gstt))))
length(genes.recognized)
length(genes.recognized)
length(genes.recognized)
q()
