    if(is.na(his_om) || his_om == "[Not Available]"){ his_om = NA
    }else{ if (his_om == "NO") NO = c(NO,"history of other malignancy")
            else YES = c(YES, "history of other malignancy")
    }
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    
    if(First_Tx_Outcome == "[Not Available]" || First_Tx_Outcome == "[Unknown]" ||
    First_Tx_Outcome == "[Not Applicable]" ){ First_Tx_Outcome = NA
    }else{
        First_Tx_Outcome = tolower(First_Tx_Outcome)
    }
    return(list(PatientId=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(YES=YES, NO=NO, First.Treatment.Outcome=First_Tx_Outcome)))
} #create.Background.record
#------------------------------------------
x <- create.Background.record("TCGA-02-0001")
x
checkTrue(is.list(x))
 checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
   
names(x)
#------------------------------------------------------------------------------------------------------------------------
create.Background.record <- function(patient.id)
{   tbl.pt.Sub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pt.Sub) == 0)
    return(list())
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Background"
    
    YES= c()
    NO = c()
    his_lgg          <- tbl.pt.Sub$history_lgg_dx_of_brain_tissue
    his_om           <- tbl.pt.Sub$history_other_malignancy
    First_Tx_Outcome <- tbl.pt.Sub$treatment_outcome_first_course
    
    if(his_lgg == "[Not Available]"){ his_lgg = NA
    }else{ if (his_lgg == "NO") NO = c(NO,"history of low grade")
        else YES = c(YES, "history of low grade")
    }
    if(is.na(his_om) || his_om == "[Not Available]"){ his_om = NA
    }else{ if (his_om == "NO") NO = c(NO,"history of other malignancy")
            else YES = c(YES, "history of other malignancy")
    }
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    
    if(First_Tx_Outcome == "[Not Available]" || First_Tx_Outcome == "[Unknown]" ||
    First_Tx_Outcome == "[Not Applicable]" ){ First_Tx_Outcome = NA
    }else{
        First_Tx_Outcome = tolower(First_Tx_Outcome)
    }
    return(list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(YES=YES, NO=NO, First.Treatment.Outcome=First_Tx_Outcome)))
} #create.Background.record
#-------------------
 x <- create.Background.record("TCGA-02-0001")
    checkTrue(is.list(x))
 checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
   
 checkEquals(names(x[["Fields"]]), c("YES", "NO", "First.Treatment.Outcome"))
  
x
   checkEquals(x, list(PatientID="TCGA.02.0001", PtNum=1, study=study, Name="Background", Fields=list(YES=NA,
                NO= "history of low grade", First.Treatment.Outcome=NA)))
unique(tbl.pt$treatment_outcome_first_course)
tbl.pt[tbl.pt$treatment_outcome_first_course == "[Discrepancy]")
tbl.pt[tbl.pt$treatment_outcome_first_course == "[Discrepancy]",]
x <- create.Background.record("TCGA-06-0160")
x
background.events <- lapply(patient.ids, create.Background.record)
   
patient.ids
patients <- tcga.ids
tcga.ids
 background.events <- lapply(patient.ids, create.Background.record)
   
patient.ids
patient.ids <- tcga.ids
patient.ids
 background.events <- lapply(patient.ids, create.Background.record)
background.events
background.events[[592]]
create.Background.record <- function(patient.id)
{   tbl.pt.Sub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pt.Sub) == 0)
    return(list())
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Background"
    
    YES= c()
    NO = c()
    his_lgg          <- tbl.pt.Sub$history_lgg_dx_of_brain_tissue
    his_om           <- tbl.pt.Sub$history_other_malignancy
    First_Tx_Outcome <- tbl.pt.Sub$treatment_outcome_first_course
    
    if(his_lgg == "[Not Available]"){ his_lgg = NA
    }else{ if (his_lgg == "NO") NO = c(NO,"history of low grade")
        else YES = c(YES, "history of low grade")
    }
    if(is.na(his_om) || his_om == "[Not Available]"){ his_om = NA
    }else{ if (his_om == "NO") NO = c(NO,"history of other malignancy")
        else YES = c(YES, "history of other malignancy")
    }
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    History = c(YES, NO)
    
    if(First_Tx_Outcome == "[Not Available]" || First_Tx_Outcome == "[Unknown]" ||
    First_Tx_Outcome == "[Not Applicable]" ){ First_Tx_Outcome = NA
    }else{
        First_Tx_Outcome = tolower(First_Tx_Outcome)
    }
    return(list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(History = History, Symptoms=NA, First.Symptom=NA, First.Symptom.Duration=NA, Food.Allergy=NA,Animal.Allergy=NA, Age.First.Allergy=NA, First.Treatment.Outcome=First_Tx_Outcome)))
} #create.Background.record
#------------------------------------------
x <- create.Background.record("TCGA-02-0001")
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
x
checkEquals(x, list(PatientID="TCGA.02.0001", PtNum=1, study=study, Name="Background", Fields=list(History=(NA, "history of low grade"),Symptoms=NA, First.Symptom=NA, First.Symptom.Duration=NA, Food.Allergy=NA,Animal.Allergy=NA, Age.First.Allergy=NA, First.Treatment.Outcome=NA)))
    
checkEquals(x$Fields$History,c(NA,"history of low grad"))
checkEquals(x$Fields$History,c(NA,"history of low grade"))
x$Fields
create.Background.record <- function(patient.id)
{   tbl.pt.Sub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pt.Sub) == 0)
    return(list())
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Background"
    
    YES= c()
    NO = c()
    his_ionizing            <- tbl.pt.Sub$history_ionizing_rt_to_head # "NO", "[Unknown]", "YES", "[Not Available]"
    his_seizures            <- tbl.pt.Sub$ history_seizures # "NO", "[Unknown]", "YES", "[Not Available]"
    his_headaches           <- tbl.pt.Sub$history_headaches # "NO", "[Unknown]", "YES", "[Not Available]"
    his_eczema              <- tbl.pt.Sub$history_eczema
    his_allgergy_dm         <- tbl.pt.Sub$history_dust_mold_allergy
    his_neoadjuvant_med     <- tbl.pt.Sub$history_neoadjuvant_medication
    his_family_bt           <- tbl.pt.Sub$family_history_brain_tumor
    his_asthma              <- tbl.pt.Sub$history_asthma
    his_hay_fever           <- tbl.pt.Sub$histor_hay_fever
    his_neoadjuvant_ste     <- tbl.pt.Sub$history_neoadjuvant_steroid_tx
    his_family_ca           <- tbl.pt.Sub$family_history_cancer_indicator
    
    
    
    if(his_ionizing == "[Not Available]" || his_ionizing == "[Unknown]" ){ his_ionizing = NA
    }else{ if (his_ionizing == "NO") NO = c(NO,"ionizing rt")
        else YES = c(YES, "ionizing rt")
    }
    if(his_seizures == "[Not Available]" || his_seizures == "[Unknown]" ){ his_seizures = NA
    }else{ if (his_seizures == "NO") NO = c(NO,"seizures")
        else YES = c(YES, "seizures")
    }
    if(his_headaches == "[Not Available]" || his_headaches == "[Unknown]" ){ his_headaches = NA
    }else{ if (his_headaches == "NO") NO = c(NO,"headaches")
        else YES = c(YES, "headaches")
    }
    if(his_eczema  == "[Not Available]" || his_eczema  == "[Unknown]" ){ his_eczema  = NA
    }else{ if (his_eczema  == "NO") NO = c(NO,"eczema")
        else YES = c(YES, "eczema")
    }
    if(his_allgergy_dm  == "[Not Available]" || his_allgergy_dm  == "[Unknown]" ){ his_allgergy_dm  = NA
    }else{ if (his_allgergy_dm  == "NO") NO = c(NO,"dust mold")
        else YES = c(YES, "dust mold")
    }
    if(his_neoadjuvant_med == "[Not Available]" || his_neoadjuvant_med == "[Unknown]" ){
        his_neoadjuvant_med = NA
    }else{ if (his_neoadjuvant_med == "NO") NO = c(NO,"neoadjuvant medication")
        else YES = c(YES, "neoadjuvant medication")
    }
    if(his_family_bt == "[Not Available]" || his_family_bt == "[Unknown]" ){ his_family_bt = NA
    }else{ if (his_family_bt == "NO") NO = c(NO,"family brain tumor")
        else YES = c(YES, "family brain tumor")
    }
    if(his_asthma  == "[Not Available]" || his_asthma  == "[Unknown]" ){ his_asthma  = NA
    }else{ if (his_asthma  == "NO") NO = c(NO,"asthma")
        else YES = c(YES, "asthma")
    }
    if(his_hay_fever  == "[Not Available]" || his_hay_fever  == "[Unknown]" ){ his_hay_fever  = NA
    }else{ if (his_hay_fever  == "NO") NO = c(NO,"hay fever")
        else YES = c(YES, "hay fever")
    }
    if(his_neoadjuvant_ste  == "[Not Available]" || his_neoadjuvant_ste  == "[Unknown]" ){
        his_neoadjuvant_ste  = NA
    }else{ if (his_neoadjuvant_ste  == "NO") NO = c(NO,"neoadjuvant steroid")
        else YES = c(YES, "neoadjuvant steroid")
    }
    if(his_family_ca  == "[Not Available]" || his_family_ca  == "[Unknown]" ){
        his_family_ca  = NA
    }else{ if (his_family_ca  == "NO") NO = c(NO,"family cancer")
        else YES = c(YES, "family cancer")
    }
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    History = c(YES, NO)
    
    YES = c()
    NO = c()
    visual  <- tbl.pt.Sub$symp_changes_visual
    motor   <- tbl.pt.Sub$symp_changes_motor_movement
    mental  <- tbl.pt.Sub$symp_changes_mental_status
    sensory <- tbl.pt.Sub$symp_changes_sensory
    if(visual  == "[Not Available]" || visual  == "[Unknown]" ){
        visual  = NA
    }else{ if (visual  == "NO") NO = c(NO,"visual")
        else YES = c(YES, "visual")
    }
    if(motor   == "[Not Available]" || motor   == "[Unknown]" ){
        motor   = NA
    }else{ if (motor   == "NO") NO = c(NO,"motor ")
        else YES = c(YES, "motor ")
    }
    if(mental  == "[Not Available]" || mental  == "[Unknown]" ){
        mental  = NA
    }else{ if (mental  == "NO") NO = c(NO,"mental")
        else YES = c(YES, "mental")
    }
    if(sensory  == "[Not Available]" || sensory  == "[Unknown]" ){
        sensory  = NA
    }else{ if (sensory  == "NO") NO = c(NO,"sensory")
        else YES = c(YES, "sensory")
    }
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    Symptoms = c(YES, NO)
    
    First.Symptom <- tbl.pt.Sub$related_symptom_first_present
    if(First.Symptom == "[Not Available]") First.Symptom=NA
    
    First.Symptom.Duration <- tbl.pt.Sub$first_symptom_longest_duration
    if(First.Symptom.Duration== "[Not Available]") First.Symptom.Duration=NA
    
    Allergy.Food.Type <- tbl.pt.Sub$allergy_food_dx_type
    Allergy.Food.Age  <- tbl.pt.Sub$allergy_food_dx_age
    
    if(Allergy.Food.Type == "[Not Available]" || Allergy.Food.Type == "[Unknown]")
       Allergy.Food.Type = NA
    if(Allergy.Food.Age == "[Not Available]")
       Allergy.Food.Age = NA
    if(is.na(Allergy.Food.Type)) Food.Allergy = "No"
    else{
       Food.Allergy = paste(Allergy.Food.Type, Allergy.Food.Age, sep=":")
    }
    
    Allergy.Animal.Type <- tbl.pt.Sub$allergy_animals_insects_dx_type
    Allergy.Animal.Age  <- tbl.pt.Sub$allergy_animals_insects_dx_age
    
    if(Allergy.Animal.Type == "[Not Available]" || Allergy.Animal.Type == "[Unknown]")
    Allergy.Animal.Type = NA
    if(Allergy.Animal.Age == "[Not Available]")
    Allergy.Animal.Age = NA
    if(is.na(Allergy.Animal.Type)) Animal.Allergy = "No"
    else{
        Animal.Allergy = paste(Allergy.Animal.Type, Allergy.Animal.Age, sep=":")
    }
    Age.First.Allergy <- tbl.pt.Sub$asthma_eczema_allergy_first_dx
    if(Age.First.Allergy == "[Not Available]") Age.First.Allergy = NA
    
    
    if(First_Tx_Outcome == "[Not Available]" || First_Tx_Outcome == "[Unknown]" ||
    First_Tx_Outcome == "[Not Applicable]" ){ First_Tx_Outcome = NA
    }else{
        First_Tx_Outcome = tolower(First_Tx_Outcome)
    }
    return(list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(History = History,
           Symptoms=Symptoms, First.Symptom=First.Symptom, First.Symptom.Duration=First.Symptom.Duration,
           Food.Allergy=Food.Allergy,Animal.Allergy=Animal.Allergy,Age.First.Allergy=Age.First.Allergy,
           First.Treatment.Outcome=First_Tx_Outcome)))
} #create.Background.record
#------------------
create.Background.record <- function(patient.id)
{   tbl.pt.Sub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pt.Sub) == 0)
    return(list())
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Background"
    
    YES= c()
    NO = c()
    his_lgg          <- tbl.pt.Sub$history_lgg_dx_of_brain_tissue
    his_om           <- tbl.pt.Sub$history_other_malignancy
    First_Tx_Outcome <- tbl.pt.Sub$treatment_outcome_first_course
    
    if(his_lgg == "[Not Available]"){ his_lgg = NA
    }else{ if (his_lgg == "NO") NO = c(NO,"history of low grade")
        else YES = c(YES, "history of low grade")
    }
    if(is.na(his_om) || his_om == "[Not Available]"){ his_om = NA
    }else{ if (his_om == "NO") NO = c(NO,"history of other malignancy")
        else YES = c(YES, "history of other malignancy")
    }
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    History = c(YES, NO)
    
    if(First_Tx_Outcome == "[Not Available]" || First_Tx_Outcome == "[Unknown]" ||
    First_Tx_Outcome == "[Not Applicable]" ){ First_Tx_Outcome = NA
    }else{
        First_Tx_Outcome = tolower(First_Tx_Outcome)
    }
    return(list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(History = History, Symptoms=NA, First.Symptom=NA, First.Symptom.Duration=NA, Food.Allergy=NA,Animal.Allergy=NA, Age.First.Allergy=NA, First.Treatment.Outcome=First_Tx_Outcome)))
} #create.Background.record
#----------------------------------------------------------
x <- create.Background.record("TCGA-02-0001")
    checkTrue(is.list(x))
x
 checkEquals(x, list(PatientID="TCGA.02.0001", PtNum=1, study=study, Name="Background", Fields=list(History=(NA, "history of low grade"),Symptoms=NA, First.Symptom=NA, First.Symptom.Duration=NA, Food.Allergy=NA,Animal.Allergy=NA, Age.First.Allergy=NA, First.Treatment.Outcome=NA)))
   
create.Background.record <- function(patient.id)
{   tbl.pt.Sub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pt.Sub) == 0)
    return(list())
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Background"
    
    YES= c()
    NO = c()
    his_lgg          <- tbl.pt.Sub$history_lgg_dx_of_brain_tissue
    his_om           <- tbl.pt.Sub$history_other_malignancy
    First_Tx_Outcome <- tbl.pt.Sub$treatment_outcome_first_course
    
    if(his_lgg == "[Not Available]"){ his_lgg = NA
    }else{ if (his_lgg == "NO") NO = c(NO,"history of low grade")
        else YES = c(YES, "history of low grade")
    }
    if(is.na(his_om) || his_om == "[Not Available]"){ his_om = NA
    }else{ if (his_om == "NO") NO = c(NO,"history of other malignancy")
        else YES = c(YES, "history of other malignancy")
    }
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    History = list(YES=YES, NO=NO)
    
    if(First_Tx_Outcome == "[Not Available]" || First_Tx_Outcome == "[Unknown]" ||
    First_Tx_Outcome == "[Not Applicable]" ){ First_Tx_Outcome = NA
    }else{
        First_Tx_Outcome = tolower(First_Tx_Outcome)
    }
    return(list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(History = History, Symptoms=NA, First.Symptom=NA, First.Symptom.Duration=NA, Food.Allergy=NA,Animal.Allergy=NA, Age.First.Allergy=NA, First.Treatment.Outcome=First_Tx_Outcome)))
} #create.Background.record
#--------------------------------------
x <- create.Background.record("TCGA-02-0001")
    checkTrue(is.list(x))
x
checkEquals(names(x[["Fields"]]), c("History", "First.Treatment.Outcome"))
    checkEquals(x, list(PatientID="TCGA.02.0001", PtNum=1, study=study, Name="Background", Fields=list(History=list(YES=NA,NO=c("history of low grade")),Symptoms=NA, First.Symptom=NA, First.Symptom.Duration=NA, Food.Allergy=NA,Animal.Allergy=NA, Age.First.Allergy=NA, First.Treatment.Outcome=NA)))
checkEquals(x$Fields$History,list(YES=NA,NO=c("history of low grade"))
)
study
checkEquals(names(x[["Fields"]]), c("History","Symptoms","First.Symptom","First.Symptom.Duration","Food.Allergy","Animal.Allergy","Age.First.Allergy","First.Treatment.Outcome"))
 checkEquals(x, list(PatientID="TCGA.02.0001", PtNum=1, study=study, Name="Background", Fields=list(History=list(YES=NA,NO=c("history of low grade")),Symptoms=NA, First.Symptom=NA, First.Symptom.Duration=NA, Food.Allergy=NA,Animal.Allergy=NA, Age.First.Allergy=NA, First.Treatment.Outcome=NA)))
    
x <- create.Background.record("TCGA-06-0160")
x
 checkEquals(x, list(PatientID="TCGA.06.0160", PtNum=351, study=study, Name="Background",
    Fields=list(History=list(YES="history of other malignancy", NO= c("history of low grade")),Symptoms=NA, First.Symptom=NA, First.Symptom.Duration=NA, Food.Allergy=NA,Animal.Allergy=NA, Age.First.Allergy=NA,First.Treatment.Outcome="[discrepancy]")))
    
    
unique(tbl.pt$histological_type)
unique(tbl.omf$other_malignancy_histological_type)
q()
unique(tbl.pt$histological_type)
create.Tests.record <- function(patient.id)
{
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Tests"
    
    list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(Date=NA,
    Type=NA, Test=NA, Res=NA))
} #create.Tests.record
#---------------------
x <- create.Tests.record(tcga.ids[1])
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
library(RUnit)
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkTrue(is.list(x))
x
create.Tests.record <- function(patient.id)
{
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Tests"
    
    list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(Date=NA,
    Type=NA, Test=NA, Res=NA))
} #create.Tests.record
#---------------------------------------------------------------------------------------------------
test_create.Tests.record <- function()
{
    x <- create.Tests.record(tcga.ids[1])
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(x, list(PatientID="TCGA.02.0001", PtNum=1, study=study, Name="Tests",Fields=list(Date=NA, Type=NA, Test=NA,Res=NA)))
} #test_create.Tests.record
#-----------------------------------------------------------
test_create.Tests.record()
source("createEventList.R")
source("createEventList.R")
test_create.Pathology.record()
   test_create.Absent.record()
test_create.Pathology.record()
 print("--- test_create.Pathology.record")
    x <- create.Pathology.record(tcga.ids[1])
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection", "grade"))
    checkEquals(x[[1]], list(PatientID="TCGA.02.0001", PtNum=1, study=study, Name="Pathology", Fields=list(date="01/01/2002", disease="Brain", histology="Untreated primary (de novo) GBM", bucket="High Grade Glioma", collection=NA, grade="G4")))
    
 x <- create.Pathology.record("TCGA-06-0209") #has omf
x
create.Pathology.record <- function(patient.id)
{
   tbl.pathSub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode==patient.id)
   if(nrow(tbl.pathSub) == 0 & nrow(tbl.omfSub) == 0)
       return(list())  
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
   patient.number <- as.integer(id.map[patient.id])
   name <- "Pathology"
   result <- vector("list", nrow(tbl.pathSub)+nrow(tbl.omfSub))
   good.records.found <- 0
   
   if(nrow(tbl.pathSub) >0){
   for(pathEvent in 1:nrow(tbl.pathSub)){
  pathology.offset <-   as.integer(tbl.pathSub$days_to_initial_pathologic_diagnosis[pathEvent])
      patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
      patient.number <- as.integer(id.map[patient.id])
      date <- reformatDate(format(diagnosis.date + pathology.offset))
      pathDisease <- tbl.pathSub$tumor_tissue_site[pathEvent]
      pathHistology <- tbl.pathSub$histological_type[pathEvent]    
      collection <- tbl.pathSub$prospective_collection[pathEvent]
      if(collection == "YES"){ collection = "prospective"
      } else if( tbl.pathSub$retrospective_collection  == "YES"){ collection = "retrospective"
      } else { collection = NA }
 
      new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name=name,
                        Fields = list(date=date, disease=pathDisease, histology=pathHistology,bucket="High Grade Glioma", collection=collection, grade="G4"))
      good.records.found <- good.records.found + 1
      result[[good.records.found]] <- new.event
      }} # for pathEvent
      
     if(nrow(tbl.omfSub)>0){
     for(omfEvent in 1:nrow(tbl.omfSub)){
      disease <- tbl.omfSub$other_malignancy_anatomic_site[omfEvent]
      omfOffset = tbl.omfSub$days_to_other_malignancy_dx[omfEvent]
      histology <- tbl.omfSub$other_malignancy_histological_type[omfEvent]
      if(disease   == "[Not Available]") disease = NA
      if(histology == "[Not Available]") histology = NA
      if(omfOffset == "[Not Available]"){ omf.date = NA
      }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))      }
      
       new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name=name,
                        Fields = list(date=omf.date, disease=disease, histology=histology, bucket="High Grade Glioma",collection=NA, grade="G4"))
   
       good.records.found <- good.records.found + 1
       result[[good.records.found]] <- new.event
     } }
   result[1:good.records.found]
   
} # create.Pathology.record
#------------------------------------------------------------------------------------------------------------------------
test_create.Pathology.record <- function()
{
    print("--- test_create.Pathology.record")
    x <- create.Pathology.record(tcga.ids[1])
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection", "grade"))
    checkEquals(x[[1]], list(PatientID="TCGA.02.0001", PtNum=1, study=study, Name="Pathology", Fields=list(date="01/01/2002", disease="Brain", histology="Untreated primary (de novo) GBM", bucket="High Grade Glioma", collection=NA, grade="G4")))
    
    x <- create.Pathology.record("TCGA-06-0209") #has omf
    checkEquals(x[[1]], list(PatientID="TCGA.06.0209", PtNum=372, study=study, Name="Pathology",Fields=list(date="01/01/1997", disease="Brain", histology="Untreated primary (de novo) GBM", collection=NA, grade="G4")))
    checkEquals(x[[2]], list(PatientID="TCGA.06.0209", PtNum=372, study=study, Name="Pathology",Fields=list(date=NA, disease="Prostate", histology="Adenocarcinoma, Not Otherwise Specified",bucket="High Grade Glioma",  collection=NA, grade="G4")))
} # test_create.Pathology.record
#-------------------------------------------------------------------
test_create.Pathology.record()
 x <- create.Pathology.record("TCGA-06-0209") #ha
x
 checkEquals(x[[1]], list(PatientID="TCGA.06.0209", PtNum=372, study=study, Name="Pathology",Fields=list(date="01/01/1997", disease="Brain", histology="Untreated primary (de novo) GBM", bucket="High Grade Glioma",collection=NA, grade="G4")))
    checkEquals(x[[2]], list(PatientID="TCGA.06.0209", PtNum=372, study=study, Name="Pathology",Fields=list(date=NA, disease="Prostate", histology="Adenocarcinoma, Not Otherwise Specified",bucket="High Grade Glioma",  collection=NA, grade="G4")))
source9"createEventList.R")
source("createEventList.R")
   patients <- tcga.ids
   
   patients <- gsub("\\.", "\\-", patients)
   checkTrue(all(patients %in% tbl.pt[,1]))
   
   history <- parseEvents(patients)
length(history)
 checkEquals(length(history), 7644)
   checkEquals(as.list(table(unlist(lapply(history, function(e) e["Name"])))), list(`Absent`=328,`Background`=592, `Birth`=592, `Diagnosis`=592,`Drug`=1467,`Encounter`=1227, `Pathology`=594, `Procedure`=142, `Progression`=388,  `Radiation`=538, `Status`=592, `Tests`=592))
serialized.file.name <- "../../extdata/history.RData"
   #printf("saving history to %s", serialized.file.name)
   
   save(history, file=serialized.file.name)
q()
