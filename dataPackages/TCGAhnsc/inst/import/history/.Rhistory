create.Progression.record <- function(patient.id)
{
   
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   tbl.fu.rows <- subset(tbl.f3, bcr_patient_barcode==patient.id)
   tbl.nte.rows <- subset(tbl.nte, bcr_patient_barcode==patient.id)
   
   if(nrow(tbl.fu.rows) == 0 & nrow(tbl.nte.rows)==0)
       return(list())
  tbl.fu.rows <- tbl.fu.rows[, c("new_tumor_event_type","new_tumor_event_dx_days_to") ]
  if(nrow(tbl.nte.rows)>0) { 
     nte <- tbl.nte.rows[,c("new_tumor_event_type","new_tumor_event_dx_days_to")]
     tbl.fu.rows <- rbind(tbl.fu.rows, nte)
     #tbl.fu.rows <- nte
  }
  tbl.fu.rows <- tbl.fu.rows[with(tbl.fu.rows, order(new_tumor_event_dx_days_to)),]
  duplicates <- which(duplicated(tbl.fu.rows[,"new_tumor_event_dx_days_to"]))
  if(length(duplicates)>0){
     dupVals <- unique(tbl.fu.rows[duplicates, "new_tumor_event_dx_days_to"])
     originals <- match(dupVals, tbl.fu.rows$new_tumor_event_dx_days_to)
     allVals <- sapply(dupVals, function(val) {
       t<- paste(tbl.fu.rows[which(tbl.fu.rows$new_tumor_event_dx_days_to == val), "new_tumor_event_type"], collapse=";")
       t<- gsub("\\[Unknown\\]", "", t)
       t<- gsub("\\[Not Available\\]", "", t)
       t<- gsub("NA", "", t)
       while(grepl(";;", t)){ t<- gsub(";;", ";", t)}
       gsub(";$", "", t)
     })
     tbl.fu.rows[originals, "new_tumor_event_type"] <- allVals
     tbl.fu.rows <- tbl.fu.rows[-duplicates,]
  }
   name <- "Progression"
   result <- vector("list", nrow(tbl.fu.rows) )
   good.records.found <- 0
   if(nrow(tbl.fu.rows)>0){
 for(i in 1:nrow(tbl.fu.rows)){
  row <- tbl.fu.rows[i, ]
  eventtype <- row[["new_tumor_event_type"]]
  if(!is.na(eventtype) ){ if(eventtype == "[Unknown]" | eventtype == "[Not Available]" | eventtype == "") eventtype = NA }
  if(row["new_tumor_event_dx_days_to"] != "[Not Available]"){
     progression.offset <-   as.integer(row["new_tumor_event_dx_days_to"])
         patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
         patient.number <- as.integer(id.map[patient.id])
         progression <- reformatDate(format(diagnosis.date + progression.offset))
         new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name=name,
                        Fields=list(date=progression, event=eventtype, number=good.records.found+1))
                
         good.records.found <- good.records.found + 1
         result[[good.records.found]] <- new.event
       }
    }}
    
    
   result[1:good.records.found]
   
} # create.Progression.record
#------------------------------------------------------------------------------------------------------------------------
test_create.Progression.record <- function()
{
    print("--- test_create.Progression.record")
    x <- create.Progression.record("TCGA-BA-A4IF")
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "event", "number"))
    checkEquals(x[[1]], list(PatientID="TCGA.BA.A4IF", PtNum=23, study=study, Name="Progression", Fields=list(date="04/08/2012", event="New Primary Tumor", number=1)))
    x <- create.Progression.record("TCGA-UF-A7JV")
    checkEquals(x[[1]], list(PatientID="TCGA.UF.A7JV", PtNum=523, study=study, Name="Progression", Fields=list(date="02/25/2011", event=NA, number=1)))
    x <- create.Progression.record("TCGA-QK-A6IH") # two records in follow up nte
    checkEquals(length(x),2)
    checkEquals(x[[1]], list(PatientID="TCGA.QK.A6IH", PtNum=482, study=study, Name="Progression", Fields=list(date="08/17/2013", event=NA, number=1)))
    checkEquals(x[[2]], list(PatientID="TCGA.QK.A6IH", PtNum=482, study=study, Name="Progression", Fields=list(date="09/06/2013", event="Distant Metastasis;Distant Metastasis", number=2)))
    x <- create.Progression.record("TCGA-BA-A6DB") # only in nte
    checkEquals(x[[1]], list(PatientID="TCGA.BA.A6DB", PtNum=29, study=study, Name="Progression", Fields=list(date="07/27/2012", event="Locoregional Disease", number=1)))
    
   
} # test_create.Progression.record
#------------------------------------------------------------------------------------------------------------------------
create.all.Progression.records <- function(patient.ids)
{
      # 89 good rows
   tbl.good <- subset(tbl.f3, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]")
   tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]")
   ids <- unique(c(tbl.good$bcr_patient_barcode, tbl.nteSub$bcr_patient_barcode))
   #ids <- unique(tbl.nteSub$bcr_patient_barcode)
  count <- 1
  #result <- vector("list", nrow(tbl.good))
  result <- vector("list", nrow(tbl.nteSub))
  for(id in ids){
     new.list <- create.Progression.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
     # Count tells us how many good events we found
    deleters <- which(unlist(lapply(result, is.null)))
    if(length(deleters) > 0)
        result <- result[-deleters]
    result
} # create.all.Progression.records
#---------------------------------------------------------
test_create.Progression.record()
tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.f3Sub  <- subset(tbl.f3,  bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   
  ids <- unique(c(tbl.nteSub$bcr_patient_barcode,tbl.f2Sub$bcr_patient.barcode, tbl.omfSub$bcr_patient_barcode))
length(ids)
ids
patient.id <- ids[1]
 tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode==patient.id & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.f3Sub  <- subset(tbl.f3,  bcr_patient_barcode==patient.id & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode==patient.id & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
tbl.nteSub
length(f3Sub
)
tbl.f3Sub
tbl.omfSub
if(nrow(tbl.nteSub) == 0 && nrow(tbl.f3Sub) == 0 && nrow(tbl.omfSub) == 0)
       return(list())
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
   patient.number <- as.integer(id.map[patient.id])
   name <- "Absent"
c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx")  %in% colnames(tbl.nteSub)
c("days_to_other_malignancy_dx", "radiation_tx_indicator", "drug_tx_indicator") %in% colnames(tbl.omfSub)
 tbl.rows <- tbl.nteSub[, c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx")  ]
  
  if(nrow(tbl.omfSub)>0) {
     omf <- tbl.omfSub[, c("days_to_other_malignancy_dx", "radiation_tx_indicator", "drug_tx_indicator")  ]
     colnames(omf) <- c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx") 
     tbl.rows <- rbind(tbl.rows, omf)
  }
  colnames(tbl.rows) <- c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx")
 duplicates <- which(duplicated(tbl.rows))
  if(length(duplicates)>0)
     tbl.rows <- tbl.rows[-duplicates,]
  
   result <- vector("list", nrow(tbl.rows))
   good.records.found <- 0
nrow(tbl.rows)
Event = 1
dx.offset <-   as.integer(tbl.rows$new_tumor_event_dx_days_to[Event])
      date <- reformatDate(format(diagnosis.date + dx.offset))
      drug <- tbl.rows$new_tumor_event_pharmaceutical_tx[Event]
      Rx <- tbl.rows$new_tumor_event_radiation_tx[Event]      
drug
Rx
 if(drug == "NO"){ drug = "TRUE"
      } else if (drug == "YES") { drug = "FALSE"
      } else { drug = NA }
      if(Rx == "NO"){ Rx = "TRUE"
      } else if (Rx == "YES") { Rx = "FALSE"
      } else { Rx = NA }
      if(Rx=="TRUE" | drug=="TRUE"){      
          new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name=name,
                        Fields = list(date=date, Radiation=Rx, Drug=drug, pulmonary=NA))
          good.records.found <- good.records.found + 1
          result[[good.records.found]] <- new.event
}
new.event
create.Absent.record <- function(patient.id)
{
   tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode==patient.id & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.f3Sub  <- subset(tbl.f3,  bcr_patient_barcode==patient.id & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode==patient.id & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   
   
   if(nrow(tbl.nteSub) == 0 && nrow(tbl.f3Sub) == 0 && nrow(tbl.omfSub) == 0)
       return(list())
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
   patient.number <- as.integer(id.map[patient.id])
   name <- "Absent"
  tbl.rows <- tbl.nteSub[, c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx")  ]
  
  if(nrow(tbl.omfSub)>0) {
     omf <- tbl.omfSub[, c("days_to_other_malignancy_dx", "radiation_tx_indicator", "drug_tx_indicator")  ]
     colnames(omf) <- c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx") 
     tbl.rows <- rbind(tbl.rows, omf)
  }
  colnames(tbl.rows) <- c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx")
  duplicates <- which(duplicated(tbl.rows))
  if(length(duplicates)>0)
     tbl.rows <- tbl.rows[-duplicates,]
  
   result <- vector("list", nrow(tbl.rows))
   good.records.found <- 0
   
   if(nrow(tbl.rows) >0){
   for(Event in 1:nrow(tbl.rows)){
  dx.offset <-   as.integer(tbl.rows$new_tumor_event_dx_days_to[Event])
      date <- reformatDate(format(diagnosis.date + dx.offset))
      drug <- tbl.rows$new_tumor_event_pharmaceutical_tx[Event]
      Rx <- tbl.rows$new_tumor_event_radiation_tx[Event]      
      if(drug == "NO"){ drug = "TRUE"
      } else if (drug == "YES") { drug = "FALSE"
      } else { drug = NA }
      if(Rx == "NO"){ Rx = "TRUE"
      } else if (Rx == "YES") { Rx = "FALSE"
      } else { Rx = NA }
      if(Rx=="TRUE" | drug=="TRUE"){      
          new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name=name,
                        Fields = list(date=date, Radiation=Rx, Drug=drug))
          good.records.found <- good.records.found + 1
          result[[good.records.found]] <- new.event
      }
      }} # for AbsentEvent
   
   
   result[1:good.records.found]
   
} # create.Absent.record
#----------------------------------------------------------------------------------------------
ids[1]
x <- create.Absent.record("TCGA-BA-A6DI") #nte
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "Radiation", "Drug", "pulmonary"))
 checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "Radiation", "Drug"))
x
 checkEquals(x[[1]], list(PatientID="TCGA.BA.A6DI", PtNum=34, study=study, Name="Absent", Fields=list(date="09/23/2012", Radiation="TRUE", Drug="TRUE")))
ids[10]
tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.f3Sub  <- subset(tbl.f3,  bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   
  ids <- unique(c(tbl.nteSub$bcr_patient_barcode,tbl.f2Sub$bcr_patient.barcode, tbl.omfSub$bcr_patient_barcode))
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Absent.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
    deleters <- which(unlist(lapply(result, is.null)))
deleters
options(warn=0)
tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.f3Sub  <- subset(tbl.f3,  bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   
  ids <- unique(c(tbl.nteSub$bcr_patient_barcode,tbl.f2Sub$bcr_patient.barcode, tbl.omfSub$bcr_patient_barcode))
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Absent.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
    deleters <- which(unlist(lapply(result, is.null)))
options(warn=2)
tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.f3Sub  <- subset(tbl.f3,  bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   
  ids <- unique(c(tbl.nteSub$bcr_patient_barcode,tbl.f2Sub$bcr_patient.barcode, tbl.omfSub$bcr_patient_barcode))
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Absent.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
    deleters <- which(unlist(lapply(result, is.null)))
match(id,ids)
ids[44]
patient.id <- ids[44]
 tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode==patient.id & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.f3Sub  <- subset(tbl.f3,  bcr_patient_barcode==patient.id & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode==patient.id & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   
   
   if(nrow(tbl.nteSub) == 0 && nrow(tbl.f3Sub) == 0 && nrow(tbl.omfSub) == 0)
       return(list())
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
   patient.number <- as.integer(id.map[patient.id])
   name <- "Absent"
  tbl.rows <- tbl.nteSub[, c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx")  ]
  
  if(nrow(tbl.omfSub)>0) {
     omf <- tbl.omfSub[, c("days_to_other_malignancy_dx", "radiation_tx_indicator", "drug_tx_indicator")  ]
     colnames(omf) <- c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx") 
     tbl.rows <- rbind(tbl.rows, omf)
  }
  colnames(tbl.rows) <- c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx")
  duplicates <- which(duplicated(tbl.rows))
  if(length(duplicates)>0)
     tbl.rows <- tbl.rows[-duplicates,]
tbl.rows
unique(tbl.nte$new_tumor_event_dx_days_to)
unique(tbl.f3$new_tumor_event_dx_days_to)
unique(tbl.omf$days_to_other_malignancy_dx)
tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.f3Sub  <- subset(tbl.f3,  bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & days_to_other_malignancy_dx != "[Not Available]" & days_to_other_malignancy_dx != "[Pending]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   
  ids <- unique(c(tbl.nteSub$bcr_patient_barcode,tbl.f2Sub$bcr_patient.barcode, tbl.omfSub$bcr_patient_barcode))
length(ids)
create.Absent.record <- function(patient.id)
{
   tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode==patient.id & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.f3Sub  <- subset(tbl.f3,  bcr_patient_barcode==patient.id & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode==patient.id & days_to_other_malignancy_dx != "[Not Available]"& days_to_other_malignancy_dx != "[Pending]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   
   
   if(nrow(tbl.nteSub) == 0 && nrow(tbl.f3Sub) == 0 && nrow(tbl.omfSub) == 0)
       return(list())
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
   patient.number <- as.integer(id.map[patient.id])
   name <- "Absent"
  tbl.rows <- tbl.nteSub[, c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx")  ]
  
  if(nrow(tbl.omfSub)>0) {
     omf <- tbl.omfSub[, c("days_to_other_malignancy_dx", "radiation_tx_indicator", "drug_tx_indicator")  ]
     colnames(omf) <- c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx") 
     tbl.rows <- rbind(tbl.rows, omf)
  }
  colnames(tbl.rows) <- c("new_tumor_event_dx_days_to", "new_tumor_event_radiation_tx", "new_tumor_event_pharmaceutical_tx")
  duplicates <- which(duplicated(tbl.rows))
  if(length(duplicates)>0)
     tbl.rows <- tbl.rows[-duplicates,]
  
   result <- vector("list", nrow(tbl.rows))
   good.records.found <- 0
   
   if(nrow(tbl.rows) >0){
   for(Event in 1:nrow(tbl.rows)){
      
      
      dx.offset <-   as.integer(tbl.rows$new_tumor_event_dx_days_to[Event])
      date <- reformatDate(format(diagnosis.date + dx.offset))
  
      drug <- tbl.rows$new_tumor_event_pharmaceutical_tx[Event]
      Rx <- tbl.rows$new_tumor_event_radiation_tx[Event]      
      if(drug == "NO"){ drug = "TRUE"
      } else if (drug == "YES") { drug = "FALSE"
      } else { drug = NA }
      if(Rx == "NO"){ Rx = "TRUE"
      } else if (Rx == "YES") { Rx = "FALSE"
      } else { Rx = NA }
      if(Rx=="TRUE" | drug=="TRUE"){      
          new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name=name,
                        Fields = list(date=date, Radiation=Rx, Drug=drug))
          good.records.found <- good.records.found + 1
          result[[good.records.found]] <- new.event
      }
      }} # for AbsentEvent
   
   
   result[1:good.records.found]
   
} # create.Absent.record
#------------
 tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.f3Sub  <- subset(tbl.f3,  bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & days_to_other_malignancy_dx != "[Not Available]" & days_to_other_malignancy_dx != "[Pending]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   
  ids <- unique(c(tbl.nteSub$bcr_patient_barcode,tbl.f2Sub$bcr_patient.barcode, tbl.omfSub$bcr_patient_barcode))
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Absent.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
    deleters <- which(unlist(lapply(result, is.null)))
print("--- test_create.Absent.record")
    x <- create.Absent.record("TCGA-BA-A6DI") #nte
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "Radiation", "Drug"))
    checkEquals(x[[1]], list(PatientID="TCGA.BA.A6DI", PtNum=34, study=study, Name="Absent", Fields=list(date="09/23/2012", Radiation="TRUE", Drug="TRUE")))
    
    x <- create.Absent.record("TCGA-CX-7082") #has omf
x
colnames(clinical_follow_up_v1.0_hnsc)
colnames(tbl.f1)
colnames(tbl.f2)
colnames(tbl.f3)
create.Encounter.record <- function(patient.id)
{
   tbl.encSub  <- subset(tbl.pt, bcr_patient_barcode==patient.id)
   tbl.fuSub  <- subset(tbl.f1, bcr_patient_barcode==patient.id)
   tbl.fu2Sub  <- subset(tbl.f2, bcr_patient_barcode==patient.id)
   
   if(nrow(tbl.encSub) == 0 & nrow(tbl.fuSub) ==0 & nrow(tbl.fu2Sub))
       return(list())  
   patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
   patient.number <- as.integer(id.map[patient.id])   
   name <- "Encounter"
   result <- vector("list", nrow(tbl.encSub)+nrow(tbl.nteSub))
   good.records.found <- 0
   
   if(nrow(tbl.encSub)>0){
   for(encEvent in 1:nrow(tbl.encSub)){
       #encType <- tbl.encSub$performance_status_timing[encEvent]
       #if(encType == "Preoperative") encType = "Pre-Operative"
      #if(encType == "[Not Evaluated]") encType = "absent"
      #if(encType == "[Not Available]" | encType == "Unknown" | encType == "[Not Evaluated]") encType = NA
            
            #KPS    <- tbl.encSub$karnofsky_score[encEvent]
            #ECOG   <- tbl.encSub$ecog_score[encEvent]
    
     
      #if(KPS == "[Not Evaluated]") KPS = "absent"
      #if(KPS == "[Not Available]" | KPS == "Unknown" | KPS == "[Not Evaluated]" ) KPS = NA
      #if(ECOG == "[Not Evaluated]") ECOG = "absent"
      #if(ECOG == "[Not Available]" | ECOG == "Unknown" | ECOG == "[Not Evaluated]" ) ECOG = NA
      
     #if(grepl("^\\d+$",KPS)) KPS = as.integer(KPS)
     #if(grepl("^\\d+$",ECOG)) ECOG = as.integer(ECOG)
     
      new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name=name,
                        Fields = list(type=NA, kps=NA, ecog=NA, date=NA,Systolic=NA, Diastolic=NA, Height=NA, Weight=NA, BSA=NA, BMI=NA, ZubrodScore=NA))
      good.records.found <- good.records.found + 1
      result[[good.records.found]] <- new.event
      
      
}} # for encEvent
      result[1:good.records.found]
   
} # create.Encounter.record
#-----------------------------------------------------------------------------
x <- create.Encounter.record(tcga.ids[1])
    checkTrue(is.list(x))
x
 checkEquals(names(x[[1]][["Fields"]]), c("type", "kps", "ecog", "date","Systolic","Diastolic","Height","Weight","BSA","BMI","ZubrodScore"))
checkEquals(x[[1]], list(PatientID="TCGA.05.4244", PtNum=1, study=study, Name="Encounter", Fields=list(type=NA, kps=NA, ecog=NA,
                date=NA,Systolic=NA, Diastolic=NA, Height=NA, Weight=NA, BSA=NA, BMI=NA, ZubroScore=NA)))
    checkEquals(x[[1]], list(PatientID="TCGA.4P.AA8J", PtNum=1, study=study, Name="Encounter", Fields=list(type=NA, kps=NA, ecog=NA,
                date=NA,Systolic=NA, Diastolic=NA, Height=NA, Weight=NA, BSA=NA, BMI=NA, ZubroScore=NA)))
    
 checkEquals(x[[1]], list(PatientID="TCGA.4P.AA8J", PtNum=1, study=study, Name="Encounter", Fields=list(type=NA, kps=NA, ecog=NA,
                date=NA,Systolic=NA, Diastolic=NA, Height=NA, Weight=NA, BSA=NA, BMI=NA, ZubrodScore=NA)))
    
tbl.ptSub  <- subset(tbl.pt, bcr_patient_barcode %in% patient.ids )
  tbl.fuSub  <- subset(tbl.f1, bcr_patient_barcode %in% patient.ids)
  tbl.fu2Sub <- subset(tbl.f2, bcr_patient_barcode %in% patient.ids)
  ids <- unique(c(tbl.ptSub$bcr_patient_barcode, tbl.fuSub$bcr_patient_barcode,tbl.fu2Sub$bcr_patient_barcode ))   # 432
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Encounter.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
     # some number of the expected events will fail, often (always?) because
     # one or both dates is "[Not Available]".  count tells us how many good 
     # we found
    deleters <- which(unlist(lapply(result, is.null)))
deleters
create.all.Encounter.records <- function(patient.ids)
{
      # 530 good rows
  tbl.ptSub  <- subset(tbl.pt, bcr_patient_barcode %in% patient.ids )
  tbl.fuSub  <- subset(tbl.f1, bcr_patient_barcode %in% patient.ids)
  tbl.fu2Sub <- subset(tbl.f2, bcr_patient_barcode %in% patient.ids)
  ids <- unique(c(tbl.ptSub$bcr_patient_barcode, tbl.fuSub$bcr_patient_barcode,tbl.fu2Sub$bcr_patient_barcode ))   # 432
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Encounter.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
     # some number of the expected events will fail, often (always?) because
     # one or both dates is "[Not Available]".  count tells us how many good 
     # we found
    deleters <- which(unlist(lapply(result, is.null)))
    if(length(deleters) > 0)
        result <- result[-deleters]
    result
} # create.all.Encounter.records
#--------
q()y
q()
