          if( drug == "Navelbine" | drug == "Vinorelbin" | drug == "Vinorelbine Tartrate"){ drug="Vinorelbine"}
          if( drug == "Taxol"){ drug ="Paclitaxel" }
          if( drug == "MDX-1106 clinical trial"){ drug ="nivolumab" }
          if( drug == "gemcitabine"){ drug ="Gemzar" }
          if( drug == "Almita" | drug == "Almita" | drug == "Pemethexed" | drug == "Pemetrexed" | drug == "Pemetrexed disodium" | drug == "Premetrexed"){ drug ="Alimta"}
          if( drug == "Carboplatinum"){ drug ="Carboplatin"}
          if( drug == "rec MAGE 3-AS + AS15 ACS1 / Placebo Vaccine"){ drug=NA}
          }
      #            drug
#      })
#t<- unique(t); t<- t[order(t)]
     therapyType     <- tbl.drugSub$pharmaceutical_therapy_type[chemoEvent] 
     intent          <- tbl.drugSub$therapy_regimen[chemoEvent] 
     dose            <- tbl.drugSub$prescribed_dose[chemoEvent] 
     totalDose       <- tbl.drugSub$total_dose[chemoEvent] 
     units           <- tbl.drugSub$pharmaceutical_tx_dose_units[chemoEvent] 
     totalDoseUnits  <- tbl.drugSub$pharmaceutical_tx_total_dose_units[chemoEvent] 
     route           <- tbl.drugSub$route_of_administration[chemoEvent] 
     cycle           <- tbl.drugSub$pharma_adjuvant_cycles_count[chemoEvent] 
#    $treatment   neoadjuvant, adjuvant
#    $disease     "Brain"
#    $schedule    5/28, every 2 weeks
    if(therapyType == "[Discrepancy]" || therapyType == "[Not Available]") therapyType = NA
    if(intent == "OTHER: SPECIFY IN NOTES") intent <- tbl.drugSub$therapy_regimen_other[chemoEvent]
    if(intent == "Adjuvant and progression") intent <- "Adjuvant and Progression"
    if(intent == "Concurrent chemoradiation" || intent == "Concurrent Chemoradiation") intent <- "Concurrent"
    if(intent == "Maintainence") intent <- "Maintenance"
    if(intent == "[Not Available]" || intent == "[Not Applicable]") intent = NA
    if(!is.na(intent)) intent <- tolower(intent)
    
    if(dose == "[Not Available]") dose <- NA
    if(grepl("^\\d+$", dose)) dose <- as.integer(dose) 
    if(totalDose == "[Not Available]") totalDose <- NA
    if(grepl("^\\d+$", totalDose)) totalDose <- as.integer(totalDose) 
    if(totalDoseUnits == "[Not Available]") totalDoseUnits <- NA
    if(units == "[Not Available]") units <- NA
    
    if(route == "Intra-peritoneal (IP)|Intravenous (IV)") route <- "IP or IV"
    if(route == "Other (specify below)") route <- "Other"
    if(route == "[Not Available]") route <- NA
 
    if(cycle == "[Not Available]") cycle <- NA
    if(grepl("^\\d+$", cycle)) cycle <- as.integer(cycle) 
    
      new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name="Drug",
                        Fields = list(date=date, therapyType=therapyType, agent=drug, intent=intent, dose=dose, units=units, 
                                      totalDose=totalDose, totalDoseUnits=totalDoseUnits, route=route, cycle=cycle)
                        )
      good.records.found <- good.records.found + 1
      result[[good.records.found]] <- new.event
      }} # for chemoEvent
    if(nrow(tbl.omf.row)>0){
    for(omfEvent in 1:nrow(tbl.omf.row)){
      drug <- tbl.omf.row$drug_name[omfEvent]
      if(drug == "[Not Available]") drug = NA
      omfOffset = tbl.omf.row$days_to_drug_therapy_start[omfEvent]
      if(omfOffset == "[Not Available]" || omfOffset== "[Pending]"){ omf.date = c(NA, NA)
      }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))      }
      intent = tbl.omf.row$malignancy_type[omfEvent]
      if(intent == "[Not Available]") intent = NA      
        new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name="Drug",
                        Fields = list(date=omf.date, therapyType=NA, agent=drug, intent=intent, dose=NA, units=NA, 
                                      totalDose=NA, totalDoseUnits=NA, route=NA, cycle=NA)
                        )
   
       good.records.found <- good.records.found + 1
       result[[good.records.found]] <- new.event
   } }
   result[1:good.records.found]
   
} # create.Chemo.record
#-----
 tbl.drugSub <- subset(tbl.drug, bcr_patient_barcode %in% patient.ids)
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & drug_tx_indicator=="YES")
   ids <- unique(c(tbl.drugSub$bcr_patient_barcode,tbl.omfSub$bcr_patient_barcode ) )  
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Chemo.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
     # some number of the expected events will fail, often (always?) because
     # one or both dates is "[Not Available]".  count tells us how many good 
     # we found
    if(length(result) == 0)
        return(list())
    deleters <- which(unlist(lapply(result, is.null)))
match(id,ids)
length(ids)
patient.id<-ids[39]
ids[39]
 x <- create.Chemo.record("TCGA-V1-A8MU")
    checkTrue(is.list(x))
   tbl.drugSub <- subset(tbl.drug, bcr_patient_barcode==patient.id )
   tbl.omf.row <- subset(tbl.omf, bcr_patient_barcode==patient.id & drug_tx_indicator=="YES")
tbl.drugSub
tbl.omf.row
if(nrow(tbl.drugSub) == 0 && nrow(tbl.omf.row) == 0)
       return(list())
   
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
   patient.number <- as.integer(id.map[patient.id])
   name <- "Drug"
   result <- vector("list", nrow(tbl.drugSub) +nrow(tbl.omf.row))
   good.records.found <- 0
   
chemoEvent  = 1
start.chemoDate <- tbl.drugSub$pharmaceutical_tx_started_days_to[chemoEvent]
      end.chemoDate <- tbl.drugSub$pharmaceutical_tx_ended_days_to[chemoEvent]
start.chemoDate
end.chemoDate
if(start.chemoDate !="[Not Available]"){      
         start.date.unformatted <- diagnosis.date + as.integer(start.chemoDate)
         start.date <- reformatDate(start.date.unformatted)
      } else{ start.date = NA }
      if( end.chemoDate !="[Not Available]") {
         end.date.unformatted <- diagnosis.date + as.integer(end.chemoDate)
         end.date <- reformatDate(end.date.unformatted)
      } else{  end.date = NA }
      date= c(start.date, end.date)
      
 diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
diagnosis.year
diagnosis.date
patient.id<-ids[39]
diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
diagnosis.year
unique(tbl.pt$initial_pathologic_dx_year)
create.Chemo.record <- function(patient.id)
{
   tbl.drugSub <- subset(tbl.drug, bcr_patient_barcode==patient.id )
   tbl.omf.row <- subset(tbl.omf, bcr_patient_barcode==patient.id & drug_tx_indicator=="YES")
   if(nrow(tbl.drugSub) == 0 && nrow(tbl.omf.row) == 0)
       return(list())
   
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   if(diagnosis.year == "[Not Available]"){diagnosis.date=NA}
   else{
       diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   }
   patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
   patient.number <- as.integer(id.map[patient.id])
   name <- "Drug"
   result <- vector("list", nrow(tbl.drugSub) +nrow(tbl.omf.row))
   good.records.found <- 0
   
     # to look at the subset:
     # tbl.drugSub[, c("pharmaceutical_therapy_type", "pharmaceutical_therapy_drug_name", "pharmaceutical_tx_started_days_to", "pharmaceutical_tx_ended_days_to", 
     #                 "pharma_adjuvant_cycles_count", "pharmaceutical_tx_dose_units", "pharmaceutical_tx_total_dose_units", "prescribed_dose", 
     #                 "regimen_number", "route_of_administration", "therapy_regimen", "therapy_regimen_other", "total_dose")]
   if(nrow(tbl.drugSub)>0){
     for(chemoEvent in 1:nrow(tbl.drugSub)){
      start.chemoDate <- tbl.drugSub$pharmaceutical_tx_started_days_to[chemoEvent]
      end.chemoDate <- tbl.drugSub$pharmaceutical_tx_ended_days_to[chemoEvent]
      if(start.chemoDate !="[Not Available]"){      
         start.date.unformatted <- diagnosis.date + as.integer(start.chemoDate)
         start.date <- reformatDate(start.date.unformatted)
      } else{ start.date = NA }
      if( end.chemoDate !="[Not Available]") {
         end.date.unformatted <- diagnosis.date + as.integer(end.chemoDate)
         end.date <- reformatDate(end.date.unformatted)
      } else{  end.date = NA }
      date= c(start.date, end.date)
      
      drug <- tbl.drugSub$pharmaceutical_therapy_drug_name[chemoEvent]
# drug <- tbl.drug$pharmaceutical_therapy_drug_name
# t<-  sapply(tbl.drug$pharmaceutical_therapy_drug_name, function(drug){
      if( drug == "[Not Available]"){ drug = NA}
      else {
          if( grepl("Cis Retinoic Acid", drug, ignore.case=TRUE) | drug == "Cis-retinoic acid" | drug =="Reinoid/CIS retinoic acid") { drug = "CRA"}
          if( drug == "Temozomide" | drug == "Temozolamide" | drug == "Temozolomoide" | drug =="temozolomide"| drug =="Temoxolomide" | drug =="Temozlomide" | drug =="Temozolomode" || drug=="Temazolomide" || drug=="TEMOZOLOMIDE" || drug=="Themozolomide") { drug = "Temozolomide" }
          if( drug == "Irintocean" | drug =="Irintotecan" | drug =="irinotecan" | drug =="Irunotecan") { drug = "Irinotecan" }
          if( drug == "dc Vax (Dendritic Cell Vaccine)" | drug == "Dendritic Cell Vaccine (dcvax)"){ drug = "dcVax" }
          if( drug == "ch81c6" | drug == "81C6" | drug =="mu81c6" | drug =="MU81C6") {drug = "81c6"}
          if( drug == "MAB I 131" | drug == "MABI131" | drug =="MAb I-131" | drug =="MAB I131") { drug = "MAB I-131"}
          if( drug == "O6BG" | drug == "06-BG (NABTT 0803)" | drug == "06BG" | drug == "06GB" | drug =="O6B6" | drug =="06-BG")    { drug = "O6-BG"}
          if( drug == "SCH66336" | drug =="SCH63666"){ drug = "SCH6636"}
          if( drug == "Temador" | drug == "Temodor" | drug == "Temudar" | drug =="temodar" | drug =="Temodor" | drug =="Temodar (escalation)") { drug = "Temodar"}
          if( drug == "Gliadel Wafer (BCNU)" | drug == "Gliadel Waters" | drug =="Gliadel" | drug == "Gliadel Wafers" | drug =="BCNU" | drug =="Gliadel BCNU" | drug =="Gliadle Wafer"| drug =="Gliadel wafers" | drug =="Gliadel wafer carmustine" | drug =="Gliadel Wafer"){ drug = "Gliadel wafer"}
          if( drug == "Dexamethazone" | drug == "Dexamethsone" | drug =="Dexamethasome" |  drug== "Dexaethasone" | drug =="Dexmethasone") { drug = "Dexamethasone"}
          if( drug == "ABT-888 Parp Inhibitor") { drug = "ABT-888"}
          if( drug == "Bevacozimab" | drug == "Bevacizumab Avastin" | drug =="Bevcizumab"){ drug = "Bevacizumab"}
          if( drug == "Hydroxurea" | drug =="Hyroxyurea" | drug=="Hyrdroxyurea" | drug == "Hydroxyuerea"| drug =="Hydoxyurea" || drug == "Hydroyurea") { drug = "Hydroxyurea"}
          if( drug == "CI 980" | drug == "CI980") {drug = "CI-980"}
          if( drug == "VP16" | drug =="VP 16 (Etoposide)" | drug =="Vp 16" | drug =="VP 16") { drug = "VP-16"}
          if( drug == "Rapamcyin") { drug ="Rapamycin"}
          if( drug == "6 Thiguanine") { drug = "6 Thioguanine"}
          if( drug == "Acctuane" || drug=="Isotrectinoin (acccutane)"){ drug =  "Accutane"}
          if( drug == "Arsenic Tnoxide" | drug == "Arsenic Trioxide (ATO)"){ drug = "Arsenic Trioxide"}
          if( drug == "BIBW2992"){ drug = "BIBW 2992"}
          if( drug == "BS1-201"){ drug ="BSI-201"}
          if( drug == "CAI (NABTT 97212)" | drug == "CAI (NABTT 9712)") { drug = "CAI NABTT 9712"}
          if( drug == "Carmustin" | drug == "Carmustine (BCNU)" | drug == "Carmustine BCNU") { drug = "Carmustine"}
          if( drug == "CCNu" || drug =="CeeNU") { drug = "CCNU"}
          if( drug == "Celbrex"){ drug = "Celebrex"}
          if( drug == "Cilengtide") { drug = "Cilengitide"}
          if( drug == "Cisplatain" | drug == "Cisplastin" | drug == "CISplatinum"){ drug = "Cisplatin"}
          if( drug == "CPT 11" | drug == "CPT11" | drug =="cpt-11"){ drug = "CPT-11"}
          if( drug == "Erlotinib (Tarceva)" | drug == "Erlotonib") { drug ="Erlotinib"}
          if( drug == "Gleevac" ){ drug = "Gleevec" }
          if( drug == "IL-13 with Pseudomonas exotoxin" | drug =="IL-13 with Pseudomonas Exotoxin" | drug =="IL-13 Pseudomonas exotoxin" ){ drug ="IL-13PE" }
          if( drug == "Levenracetam") { drug = "Levetiracetam"}
          if( drug == "Lumustine" | drug =="Lomustine CCNU" || drug=="lomustine" || drug=="LOMUSTINE" || drug=="LOMUSTINE (CCNU)"){ drug ="Lomustine"}
          if( drug == "Metexafin Gadolinium" | drug =="Motexatin Gadoinium"){ drug = "Motexafin Gadolinium"}
          if( drug == "Procarbizine" || drug=="procarbazine" || drug=="PROCARBAZINE" ){ drug ="Procarbazine" }
          if( drug == "Tamoxiten"){ drug = "Tamoxifen"}
          if( drug == "Tanceva" | drug == "Tarveca"){ drug ="Tarceva"}
          if( drug == "Topecan" ){ drug ="Topotecan" }
          if( drug == "Vincristin" || drug=="vincristine" || drug=="VINCRISTINE") { drug ="Vincristine"}
          if( drug == "XL 184" | drug =="XL184"){ drug ="XL-184" }
          if( drug == "procarbazine"){ drug = "Procarbazine"}
          if( drug == "PS 341"){ drug ="PS-341"}
          if( drug == "Tipfarnib (R115777)"){ drug ="Tipifarnib (R115777)"}
          if( drug == "Valproic acid"){ drug="Valproic Acid"}
          if( drug == "Doxetaxol" | drug == "Taxotere" | drug == "Docetoxel/Taxotere"){ drug="Docetaxel"}
          if( drug == "Navelbine" | drug == "Vinorelbin" | drug == "Vinorelbine Tartrate"){ drug="Vinorelbine"}
          if( drug == "Taxol"){ drug ="Paclitaxel" }
          if( drug == "MDX-1106 clinical trial"){ drug ="nivolumab" }
          if( drug == "gemcitabine"){ drug ="Gemzar" }
          if( drug == "Almita" | drug == "Almita" | drug == "Pemethexed" | drug == "Pemetrexed" | drug == "Pemetrexed disodium" | drug == "Premetrexed"){ drug ="Alimta"}
          if( drug == "Carboplatinum"){ drug ="Carboplatin"}
          if( drug == "rec MAGE 3-AS + AS15 ACS1 / Placebo Vaccine"){ drug=NA}
          }
      #            drug
#      })
#t<- unique(t); t<- t[order(t)]
     therapyType     <- tbl.drugSub$pharmaceutical_therapy_type[chemoEvent] 
     intent          <- tbl.drugSub$therapy_regimen[chemoEvent] 
     dose            <- tbl.drugSub$prescribed_dose[chemoEvent] 
     totalDose       <- tbl.drugSub$total_dose[chemoEvent] 
     units           <- tbl.drugSub$pharmaceutical_tx_dose_units[chemoEvent] 
     totalDoseUnits  <- tbl.drugSub$pharmaceutical_tx_total_dose_units[chemoEvent] 
     route           <- tbl.drugSub$route_of_administration[chemoEvent] 
     cycle           <- tbl.drugSub$pharma_adjuvant_cycles_count[chemoEvent] 
#    $treatment   neoadjuvant, adjuvant
#    $disease     "Brain"
#    $schedule    5/28, every 2 weeks
    if(therapyType == "[Discrepancy]" || therapyType == "[Not Available]") therapyType = NA
    if(intent == "OTHER: SPECIFY IN NOTES") intent <- tbl.drugSub$therapy_regimen_other[chemoEvent]
    if(intent == "Adjuvant and progression") intent <- "Adjuvant and Progression"
    if(intent == "Concurrent chemoradiation" || intent == "Concurrent Chemoradiation") intent <- "Concurrent"
    if(intent == "Maintainence") intent <- "Maintenance"
    if(intent == "[Not Available]" || intent == "[Not Applicable]") intent = NA
    if(!is.na(intent)) intent <- tolower(intent)
    
    if(dose == "[Not Available]") dose <- NA
    if(grepl("^\\d+$", dose)) dose <- as.integer(dose) 
    if(totalDose == "[Not Available]") totalDose <- NA
    if(grepl("^\\d+$", totalDose)) totalDose <- as.integer(totalDose) 
    if(totalDoseUnits == "[Not Available]") totalDoseUnits <- NA
    if(units == "[Not Available]") units <- NA
    
    if(route == "Intra-peritoneal (IP)|Intravenous (IV)") route <- "IP or IV"
    if(route == "Other (specify below)") route <- "Other"
    if(route == "[Not Available]") route <- NA
 
    if(cycle == "[Not Available]") cycle <- NA
    if(grepl("^\\d+$", cycle)) cycle <- as.integer(cycle) 
    
      new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name="Drug",
                        Fields = list(date=date, therapyType=therapyType, agent=drug, intent=intent, dose=dose, units=units, 
                                      totalDose=totalDose, totalDoseUnits=totalDoseUnits, route=route, cycle=cycle)
                        )
      good.records.found <- good.records.found + 1
      result[[good.records.found]] <- new.event
      }} # for chemoEvent
    if(nrow(tbl.omf.row)>0){
    for(omfEvent in 1:nrow(tbl.omf.row)){
      drug <- tbl.omf.row$drug_name[omfEvent]
      if(drug == "[Not Available]") drug = NA
      omfOffset = tbl.omf.row$days_to_drug_therapy_start[omfEvent]
      if(omfOffset == "[Not Available]" || omfOffset== "[Pending]"){ omf.date = c(NA, NA)
      }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))      }
      intent = tbl.omf.row$malignancy_type[omfEvent]
      if(intent == "[Not Available]") intent = NA      
        new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name="Drug",
                        Fields = list(date=omf.date, therapyType=NA, agent=drug, intent=intent, dose=NA, units=NA, 
                                      totalDose=NA, totalDoseUnits=NA, route=NA, cycle=NA)
                        )
   
       good.records.found <- good.records.found + 1
       result[[good.records.found]] <- new.event
   } }
   result[1:good.records.found]
   
} # create.Chemo.record
#-------
tbl.drugSub <- subset(tbl.drug, bcr_patient_barcode %in% patient.ids)
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & drug_tx_indicator=="YES")
   ids <- unique(c(tbl.drugSub$bcr_patient_barcode,tbl.omfSub$bcr_patient_barcode ) )  
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Chemo.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
     # some number of the expected events will fail, often (always?) because
     # one or both dates is "[Not Available]".  count tells us how many good 
     # we found
    if(length(result) == 0)
        return(list())
    deleters <- which(unlist(lapply(result, is.null)))
deleters
x <- create.Chemo.record("TCGA-V1-A8MU")
    checkTrue(is.list(x))
x
checkTrue(is.list(x))
    checkEquals(length(x), 1)
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "therapyType", "agent", "intent", "dose", "units", "totalDose", "totalDoseUnits", "route", "cycle"))
    checkEquals(x[[1]], list(PatientID="TCGA.V1.A8MU", PtNum=373, study=study, Name="Drug", Fields=list(date=c(NA,NA), therapyType="Hormone Therapy", agent= "LHRH Agonist", intent=NA, dose=NA, units=NA, totalDose=NA, totalDoseUnits=NA, route=NA, cycle=NA)))
    
x
checkEquals(x[[1]], list(PatientID="TCGA.V1.A8MU", PtNum=373, study=study, Name="Drug", Fields=list(date=c(NA,NA), therapyType="Hormone Therapy", agent= "LHRH Agonist", intent=NA, dose=NA, units=NA, totalDose=NA, totalDoseUnits=NA, route=NA, cycle=NA)))
    
create.Chemo.record <- function(patient.id)
{
   tbl.drugSub <- subset(tbl.drug, bcr_patient_barcode==patient.id )
   tbl.omf.row <- subset(tbl.omf, bcr_patient_barcode==patient.id & drug_tx_indicator=="YES")
   if(nrow(tbl.drugSub) == 0 && nrow(tbl.omf.row) == 0)
       return(list())
   
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   if(diagnosis.year == "[Not Available]"){diagnosis.date=NA}
   else{
       diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   }
   patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
   patient.number <- as.integer(id.map[patient.id])
   name <- "Drug"
   result <- vector("list", nrow(tbl.drugSub) +nrow(tbl.omf.row))
   good.records.found <- 0
   
     # to look at the subset:
     # tbl.drugSub[, c("pharmaceutical_therapy_type", "pharmaceutical_therapy_drug_name", "pharmaceutical_tx_started_days_to", "pharmaceutical_tx_ended_days_to", 
     #                 "pharma_adjuvant_cycles_count", "pharmaceutical_tx_dose_units", "pharmaceutical_tx_total_dose_units", "prescribed_dose", 
     #                 "regimen_number", "route_of_administration", "therapy_regimen", "therapy_regimen_other", "total_dose")]
   if(nrow(tbl.drugSub)>0){
     for(chemoEvent in 1:nrow(tbl.drugSub)){
      start.chemoDate <- tbl.drugSub$pharmaceutical_tx_started_days_to[chemoEvent]
      end.chemoDate <- tbl.drugSub$pharmaceutical_tx_ended_days_to[chemoEvent]
   if(!is.na(diagnosis.date)){
      if(start.chemoDate !="[Not Available]"){
         start.date.unformatted <- diagnosis.date + as.integer(start.chemoDate)
         start.date <- reformatDate(start.date.unformatted)
      } else{ start.date = NA }
      if( end.chemoDate !="[Not Available]") {
         end.date.unformatted <- diagnosis.date + as.integer(end.chemoDate)
         end.date <- reformatDate(end.date.unformatted)
      } else{  end.date = NA }
      date= c(start.date, end.date)
   }else{
       date= c(NA, NA)
   }
      drug <- tbl.drugSub$pharmaceutical_therapy_drug_name[chemoEvent]
# drug <- tbl.drug$pharmaceutical_therapy_drug_name
# t<-  sapply(tbl.drug$pharmaceutical_therapy_drug_name, function(drug){
      if( drug == "[Not Available]"){ drug = NA}
      else {
          if( grepl("Cis Retinoic Acid", drug, ignore.case=TRUE) | drug == "Cis-retinoic acid" | drug =="Reinoid/CIS retinoic acid") { drug = "CRA"}
          if( drug == "Temozomide" | drug == "Temozolamide" | drug == "Temozolomoide" | drug =="temozolomide"| drug =="Temoxolomide" | drug =="Temozlomide" | drug =="Temozolomode" || drug=="Temazolomide" || drug=="TEMOZOLOMIDE" || drug=="Themozolomide") { drug = "Temozolomide" }
          if( drug == "Irintocean" | drug =="Irintotecan" | drug =="irinotecan" | drug =="Irunotecan") { drug = "Irinotecan" }
          if( drug == "dc Vax (Dendritic Cell Vaccine)" | drug == "Dendritic Cell Vaccine (dcvax)"){ drug = "dcVax" }
          if( drug == "ch81c6" | drug == "81C6" | drug =="mu81c6" | drug =="MU81C6") {drug = "81c6"}
          if( drug == "MAB I 131" | drug == "MABI131" | drug =="MAb I-131" | drug =="MAB I131") { drug = "MAB I-131"}
          if( drug == "O6BG" | drug == "06-BG (NABTT 0803)" | drug == "06BG" | drug == "06GB" | drug =="O6B6" | drug =="06-BG")    { drug = "O6-BG"}
          if( drug == "SCH66336" | drug =="SCH63666"){ drug = "SCH6636"}
          if( drug == "Temador" | drug == "Temodor" | drug == "Temudar" | drug =="temodar" | drug =="Temodor" | drug =="Temodar (escalation)") { drug = "Temodar"}
          if( drug == "Gliadel Wafer (BCNU)" | drug == "Gliadel Waters" | drug =="Gliadel" | drug == "Gliadel Wafers" | drug =="BCNU" | drug =="Gliadel BCNU" | drug =="Gliadle Wafer"| drug =="Gliadel wafers" | drug =="Gliadel wafer carmustine" | drug =="Gliadel Wafer"){ drug = "Gliadel wafer"}
          if( drug == "Dexamethazone" | drug == "Dexamethsone" | drug =="Dexamethasome" |  drug== "Dexaethasone" | drug =="Dexmethasone") { drug = "Dexamethasone"}
          if( drug == "ABT-888 Parp Inhibitor") { drug = "ABT-888"}
          if( drug == "Bevacozimab" | drug == "Bevacizumab Avastin" | drug =="Bevcizumab"){ drug = "Bevacizumab"}
          if( drug == "Hydroxurea" | drug =="Hyroxyurea" | drug=="Hyrdroxyurea" | drug == "Hydroxyuerea"| drug =="Hydoxyurea" || drug == "Hydroyurea") { drug = "Hydroxyurea"}
          if( drug == "CI 980" | drug == "CI980") {drug = "CI-980"}
          if( drug == "VP16" | drug =="VP 16 (Etoposide)" | drug =="Vp 16" | drug =="VP 16") { drug = "VP-16"}
          if( drug == "Rapamcyin") { drug ="Rapamycin"}
          if( drug == "6 Thiguanine") { drug = "6 Thioguanine"}
          if( drug == "Acctuane" || drug=="Isotrectinoin (acccutane)"){ drug =  "Accutane"}
          if( drug == "Arsenic Tnoxide" | drug == "Arsenic Trioxide (ATO)"){ drug = "Arsenic Trioxide"}
          if( drug == "BIBW2992"){ drug = "BIBW 2992"}
          if( drug == "BS1-201"){ drug ="BSI-201"}
          if( drug == "CAI (NABTT 97212)" | drug == "CAI (NABTT 9712)") { drug = "CAI NABTT 9712"}
          if( drug == "Carmustin" | drug == "Carmustine (BCNU)" | drug == "Carmustine BCNU") { drug = "Carmustine"}
          if( drug == "CCNu" || drug =="CeeNU") { drug = "CCNU"}
          if( drug == "Celbrex"){ drug = "Celebrex"}
          if( drug == "Cilengtide") { drug = "Cilengitide"}
          if( drug == "Cisplatain" | drug == "Cisplastin" | drug == "CISplatinum"){ drug = "Cisplatin"}
          if( drug == "CPT 11" | drug == "CPT11" | drug =="cpt-11"){ drug = "CPT-11"}
          if( drug == "Erlotinib (Tarceva)" | drug == "Erlotonib") { drug ="Erlotinib"}
          if( drug == "Gleevac" ){ drug = "Gleevec" }
          if( drug == "IL-13 with Pseudomonas exotoxin" | drug =="IL-13 with Pseudomonas Exotoxin" | drug =="IL-13 Pseudomonas exotoxin" ){ drug ="IL-13PE" }
          if( drug == "Levenracetam") { drug = "Levetiracetam"}
          if( drug == "Lumustine" | drug =="Lomustine CCNU" || drug=="lomustine" || drug=="LOMUSTINE" || drug=="LOMUSTINE (CCNU)"){ drug ="Lomustine"}
          if( drug == "Metexafin Gadolinium" | drug =="Motexatin Gadoinium"){ drug = "Motexafin Gadolinium"}
          if( drug == "Procarbizine" || drug=="procarbazine" || drug=="PROCARBAZINE" ){ drug ="Procarbazine" }
          if( drug == "Tamoxiten"){ drug = "Tamoxifen"}
          if( drug == "Tanceva" | drug == "Tarveca"){ drug ="Tarceva"}
          if( drug == "Topecan" ){ drug ="Topotecan" }
          if( drug == "Vincristin" || drug=="vincristine" || drug=="VINCRISTINE") { drug ="Vincristine"}
          if( drug == "XL 184" | drug =="XL184"){ drug ="XL-184" }
          if( drug == "procarbazine"){ drug = "Procarbazine"}
          if( drug == "PS 341"){ drug ="PS-341"}
          if( drug == "Tipfarnib (R115777)"){ drug ="Tipifarnib (R115777)"}
          if( drug == "Valproic acid"){ drug="Valproic Acid"}
          if( drug == "Doxetaxol" | drug == "Taxotere" | drug == "Docetoxel/Taxotere"){ drug="Docetaxel"}
          if( drug == "Navelbine" | drug == "Vinorelbin" | drug == "Vinorelbine Tartrate"){ drug="Vinorelbine"}
          if( drug == "Taxol"){ drug ="Paclitaxel" }
          if( drug == "MDX-1106 clinical trial"){ drug ="nivolumab" }
          if( drug == "gemcitabine"){ drug ="Gemzar" }
          if( drug == "Almita" | drug == "Almita" | drug == "Pemethexed" | drug == "Pemetrexed" | drug == "Pemetrexed disodium" | drug == "Premetrexed"){ drug ="Alimta"}
          if( drug == "Carboplatinum"){ drug ="Carboplatin"}
          if( drug == "rec MAGE 3-AS + AS15 ACS1 / Placebo Vaccine"){ drug=NA}
          }
      #            drug
#      })
#t<- unique(t); t<- t[order(t)]
     therapyType     <- tbl.drugSub$pharmaceutical_therapy_type[chemoEvent] 
     intent          <- tbl.drugSub$therapy_regimen[chemoEvent] 
     dose            <- tbl.drugSub$prescribed_dose[chemoEvent] 
     totalDose       <- tbl.drugSub$total_dose[chemoEvent] 
     units           <- tbl.drugSub$pharmaceutical_tx_dose_units[chemoEvent] 
     totalDoseUnits  <- tbl.drugSub$pharmaceutical_tx_total_dose_units[chemoEvent] 
     route           <- tbl.drugSub$route_of_administration[chemoEvent] 
     cycle           <- tbl.drugSub$pharma_adjuvant_cycles_count[chemoEvent] 
#    $treatment   neoadjuvant, adjuvant
#    $disease     "Brain"
#    $schedule    5/28, every 2 weeks
    if(therapyType == "[Discrepancy]" || therapyType == "[Not Available]") therapyType = NA
    if(intent == "OTHER: SPECIFY IN NOTES") intent <- tbl.drugSub$therapy_regimen_other[chemoEvent]
    if(intent == "Adjuvant and progression") intent <- "Adjuvant and Progression"
    if(intent == "Concurrent chemoradiation" || intent == "Concurrent Chemoradiation") intent <- "Concurrent"
    if(intent == "Maintainence") intent <- "Maintenance"
    if(intent == "[Not Available]" || intent == "[Not Applicable]") intent = NA
    if(!is.na(intent)) intent <- tolower(intent)
    
    if(dose == "[Not Available]") dose <- NA
    if(grepl("^\\d+$", dose)) dose <- as.integer(dose) 
    if(totalDose == "[Not Available]") totalDose <- NA
    if(grepl("^\\d+$", totalDose)) totalDose <- as.integer(totalDose) 
    if(totalDoseUnits == "[Not Available]") totalDoseUnits <- NA
    if(units == "[Not Available]") units <- NA
    
    if(route == "Intra-peritoneal (IP)|Intravenous (IV)") route <- "IP or IV"
    if(route == "Other (specify below)") route <- "Other"
    if(route == "[Not Available]") route <- NA
 
    if(cycle == "[Not Available]") cycle <- NA
    if(grepl("^\\d+$", cycle)) cycle <- as.integer(cycle) 
    
      new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name="Drug",
                        Fields = list(date=date, therapyType=therapyType, agent=drug, intent=intent, dose=dose, units=units, 
                                      totalDose=totalDose, totalDoseUnits=totalDoseUnits, route=route, cycle=cycle)
                        )
      good.records.found <- good.records.found + 1
      result[[good.records.found]] <- new.event
      }} # for chemoEvent
    if(nrow(tbl.omf.row)>0){
    for(omfEvent in 1:nrow(tbl.omf.row)){
      drug <- tbl.omf.row$drug_name[omfEvent]
      if(drug == "[Not Available]") drug = NA
      omfOffset = tbl.omf.row$days_to_drug_therapy_start[omfEvent]
      if(omfOffset == "[Not Available]" || omfOffset== "[Pending]"){ omf.date = c(NA, NA)
      }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))      }
      intent = tbl.omf.row$malignancy_type[omfEvent]
      if(intent == "[Not Available]") intent = NA      
        new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name="Drug",
                        Fields = list(date=omf.date, therapyType=NA, agent=drug, intent=intent, dose=NA, units=NA, 
                                      totalDose=NA, totalDoseUnits=NA, route=NA, cycle=NA)
                        )
   
       good.records.found <- good.records.found + 1
       result[[good.records.found]] <- new.event
   } }
   result[1:good.records.found]
   
} # create.Chemo.record
#-----------------------------------------------------------------------------------------------------------------
x <- create.Chemo.record("TCGA-V1-A8MU")
    checkTrue(is.list(x))
    checkEquals(length(x), 1)
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "therapyType", "agent", "intent", "dose", "units", "totalDose", "totalDoseUnits", "route", "cycle"))
    checkEquals(x[[1]], list(PatientID="TCGA.V1.A8MU", PtNum=373, study=study, Name="Drug", Fields=list(date=c(NA,NA), therapyType="Hormone Therapy", agent= "LHRH Agonist", intent=NA, dose=NA, units=NA, totalDose=NA, totalDoseUnits=NA, route=NA, cycle=NA)))
q()
