    his_family_ca           <- tbl.pt.Sub$family_history_cancer_indicator
    
tbl.pt.Sub
 YES= c()
    NO = c()
    his_ionizing            <- tbl.pt.Sub$history_ionizing_rt_to_head # "NO", "[Unknown]", "YES", "[Not Available]"
    his_seizures            <- tbl.pt.Sub$ history_seizures # "NO", "[Unknown]", "YES", "[Not Available]"
    his_headaches           <- tbl.pt.Sub$history_headaches # "NO", "[Unknown]", "YES", "[Not Available]"
    his_eczema              <- tbl.pt.Sub$history_eczema
    his_allgergy_dm         <- tbl.pt.Sub$history_dust_mold_allergy
    his_neoadjuvant_med     <- tbl.pt.Sub$history_neoadjuvant_medication
    his_family_bt           <- tbl.pt.Sub$family_history_brain_tumor
    his_asthma              <- tbl.pt.Sub$history_asthma
    his_hay_fever           <- tbl.pt.Sub$histor_hay_fever
    his_neoadjuvant_ste     <- tbl.pt.Sub$history_neoadjuvant_steroid_tx
    his_family_ca           <- tbl.pt.Sub$family_history_cancer_indicator
    
    
    
    if(his_ionizing == "[Not Available]" || his_ionizing == "[Unknown]" ){ his_ionizing = NA
    }else{ if (his_ionizing == "NO") NO = c(NO,"ionizing rt")
        else YES = c(YES, "ionizing rt")
    }
    if(his_seizures == "[Not Available]" || his_seizures == "[Unknown]" ){ his_seizures = NA
    }else{ if (his_seizures == "NO") NO = c(NO,"seizures")
        else YES = c(YES, "seizures")
    }
    if(his_headaches == "[Not Available]" || his_headaches == "[Unknown]" ){ his_headaches = NA
    }else{ if (his_headaches == "NO") NO = c(NO,"headaches")
        else YES = c(YES, "headaches")
    }
    if(his_eczema  == "[Not Available]" || his_eczema  == "[Unknown]" ){ his_eczema  = NA
    }else{ if (his_eczema  == "NO") NO = c(NO,"eczema")
        else YES = c(YES, "eczema")
    }
    if(his_allgergy_dm  == "[Not Available]" || his_allgergy_dm  == "[Unknown]" ){ his_allgergy_dm  = NA
    }else{ if (his_allgergy_dm  == "NO") NO = c(NO,"dust mold")
        else YES = c(YES, "dust mold")
    }
    if(his_neoadjuvant_med == "[Not Available]" || his_neoadjuvant_med == "[Unknown]" ){
        his_neoadjuvant_med = NA
    }else{ if (his_neoadjuvant_med == "NO") NO = c(NO,"neoadjuvant medication")
        else YES = c(YES, "neoadjuvant medication")
    }
    if(his_family_bt == "[Not Available]" || his_family_bt == "[Unknown]" ){ his_family_bt = NA
    }else{ if (his_family_bt == "NO") NO = c(NO,"family brain tumor")
        else YES = c(YES, "family brain tumor")
    }
    if(his_asthma  == "[Not Available]" || his_asthma  == "[Unknown]" ){ his_asthma  = NA
    }else{ if (his_asthma  == "NO") NO = c(NO,"asthma")
        else YES = c(YES, "asthma")
    }
    if(his_hay_fever  == "[Not Available]" || his_hay_fever  == "[Unknown]" ){ his_hay_fever  = NA
    }else{ if (his_hay_fever  == "NO") NO = c(NO,"hay fever")
        else YES = c(YES, "hay fever")
    }
    if(his_neoadjuvant_ste  == "[Not Available]" || his_neoadjuvant_ste  == "[Unknown]" ){
        his_neoadjuvant_ste  = NA
    }else{ if (his_neoadjuvant_ste  == "NO") NO = c(NO,"neoadjuvant steroid")
        else YES = c(YES, "neoadjuvant steroid")
    }
    if(his_family_ca  == "[Not Available]" || his_family_ca  == "[Unknown]" ){
        his_family_ca  = NA
    }else{ if (his_family_ca  == "NO") NO = c(NO,"family cancer")
        else YES = c(YES, "family cancer")
    }
    
    
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    History = list(YES=YES, NO=NO)
    
    YES = c()
    NO = c()
    visual  <- tbl.pt.Sub$symp_changes_visual
    motor   <- tbl.pt.Sub$symp_changes_motor_movement
    mental  <- tbl.pt.Sub$symp_changes_mental_status
    sensory <- tbl.pt.Sub$symp_changes_sensory
    if(visual  == "[Not Available]" || visual  == "[Unknown]" ){
        visual  = NA
    }else{ if (visual  == "NO") NO = c(NO,"visual")
        else YES = c(YES, "visual")
    }
    if(motor   == "[Not Available]" || motor   == "[Unknown]" ){
        motor   = NA
    }else{ if (motor   == "NO") NO = c(NO,"motor")
        else YES = c(YES, "motor")
    }
    if(mental  == "[Not Available]" || mental  == "[Unknown]" ){
        mental  = NA
    }else{ if (mental  == "NO") NO = c(NO,"mental")
        else YES = c(YES, "mental")
    }
    if(sensory  == "[Not Available]" || sensory  == "[Unknown]" ){
        sensory  = NA
    }else{ if (sensory  == "NO") NO = c(NO,"sensory")
        else YES = c(YES, "sensory")
    }
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    Symptoms = list(YES=YES, NO=NO)
    
    First.Symptom <- tbl.pt.Sub$related_symptom_first_present
    if(First.Symptom == "[Not Available]") First.Symptom=NA
    
    First.Symptom.Duration <- tbl.pt.Sub$first_symptom_longest_duration
    if(First.Symptom.Duration== "[Not Available]") First.Symptom.Duration=NA
    
Allergy.Food.ind  <- tbl.pt.Sub$allergy_food_dx_indicator
    Allergy.Food.Type <- tbl.pt.Sub$allergy_food_dx_type
    Allergy.Food.Age  <- tbl.pt.Sub$allergy_food_dx_age
Allergy.Food.ind
if(is.na(Allergy.Food.ind) || Allergy.Food.ind == "[Unknown]"){
        Food.Allergy = NA
    }else{
        if(Allergy.Food.ind == "NO") Food.Allergy = "No"
        else{
            if(Allergy.Food.Type == "[Not Available]" || Allergy.Food.Type == "[Unknown]")
            Allergy.Food.Type = NA
            if(Allergy.Food.Age == "[Not Available]")
            Allergy.Food.Age = NA
            if(is.na(Allergy.Food.Type)) Food.Allergy = "No"
            else{
                Food.Allergy = paste(Allergy.Food.Type, Allergy.Food.Age, sep=":")
            }
        }
    }
 Allergy.Animal.ind  <- tbl.pt$allergy_animals_insects_dx_indicator
    Allergy.Animal.Type <- tbl.pt.Sub$allergy_animals_insects_dx_type
    Allergy.Animal.Age  <- tbl.pt.Sub$allergy_animals_insects_dx_age
 
Allergy.Animal.ind
create.Background.record <- function(patient.id)
{   tbl.pt.Sub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pt.Sub) == 0)
    return(list())
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Background"
    
    YES= c()
    NO = c()
    his_ionizing            <- tbl.pt.Sub$history_ionizing_rt_to_head # "NO", "[Unknown]", "YES", "[Not Available]"
    his_seizures            <- tbl.pt.Sub$ history_seizures # "NO", "[Unknown]", "YES", "[Not Available]"
    his_headaches           <- tbl.pt.Sub$history_headaches # "NO", "[Unknown]", "YES", "[Not Available]"
    his_eczema              <- tbl.pt.Sub$history_eczema
    his_allgergy_dm         <- tbl.pt.Sub$history_dust_mold_allergy
    his_neoadjuvant_med     <- tbl.pt.Sub$history_neoadjuvant_medication
    his_family_bt           <- tbl.pt.Sub$family_history_brain_tumor
    his_asthma              <- tbl.pt.Sub$history_asthma
    his_hay_fever           <- tbl.pt.Sub$histor_hay_fever
    his_neoadjuvant_ste     <- tbl.pt.Sub$history_neoadjuvant_steroid_tx
    his_family_ca           <- tbl.pt.Sub$family_history_cancer_indicator
    
    
    
    if(his_ionizing == "[Not Available]" || his_ionizing == "[Unknown]" ){ his_ionizing = NA
    }else{ if (his_ionizing == "NO") NO = c(NO,"ionizing rt")
        else YES = c(YES, "ionizing rt")
    }
    if(his_seizures == "[Not Available]" || his_seizures == "[Unknown]" ){ his_seizures = NA
    }else{ if (his_seizures == "NO") NO = c(NO,"seizures")
        else YES = c(YES, "seizures")
    }
    if(his_headaches == "[Not Available]" || his_headaches == "[Unknown]" ){ his_headaches = NA
    }else{ if (his_headaches == "NO") NO = c(NO,"headaches")
        else YES = c(YES, "headaches")
    }
    if(his_eczema  == "[Not Available]" || his_eczema  == "[Unknown]" ){ his_eczema  = NA
    }else{ if (his_eczema  == "NO") NO = c(NO,"eczema")
        else YES = c(YES, "eczema")
    }
    if(his_allgergy_dm  == "[Not Available]" || his_allgergy_dm  == "[Unknown]" ){ his_allgergy_dm  = NA
    }else{ if (his_allgergy_dm  == "NO") NO = c(NO,"dust mold")
        else YES = c(YES, "dust mold")
    }
    if(his_neoadjuvant_med == "[Not Available]" || his_neoadjuvant_med == "[Unknown]" ){
        his_neoadjuvant_med = NA
    }else{ if (his_neoadjuvant_med == "NO") NO = c(NO,"neoadjuvant medication")
        else YES = c(YES, "neoadjuvant medication")
    }
    if(his_family_bt == "[Not Available]" || his_family_bt == "[Unknown]" ){ his_family_bt = NA
    }else{ if (his_family_bt == "NO") NO = c(NO,"family brain tumor")
        else YES = c(YES, "family brain tumor")
    }
    if(his_asthma  == "[Not Available]" || his_asthma  == "[Unknown]" ){ his_asthma  = NA
    }else{ if (his_asthma  == "NO") NO = c(NO,"asthma")
        else YES = c(YES, "asthma")
    }
    if(his_hay_fever  == "[Not Available]" || his_hay_fever  == "[Unknown]" ){ his_hay_fever  = NA
    }else{ if (his_hay_fever  == "NO") NO = c(NO,"hay fever")
        else YES = c(YES, "hay fever")
    }
    if(his_neoadjuvant_ste  == "[Not Available]" || his_neoadjuvant_ste  == "[Unknown]" ){
        his_neoadjuvant_ste  = NA
    }else{ if (his_neoadjuvant_ste  == "NO") NO = c(NO,"neoadjuvant steroid")
        else YES = c(YES, "neoadjuvant steroid")
    }
    if(his_family_ca  == "[Not Available]" || his_family_ca  == "[Unknown]" ){
        his_family_ca  = NA
    }else{ if (his_family_ca  == "NO") NO = c(NO,"family cancer")
        else YES = c(YES, "family cancer")
    }
    
    
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    History = list(YES=YES, NO=NO)
    
    YES = c()
    NO = c()
    visual  <- tbl.pt.Sub$symp_changes_visual
    motor   <- tbl.pt.Sub$symp_changes_motor_movement
    mental  <- tbl.pt.Sub$symp_changes_mental_status
    sensory <- tbl.pt.Sub$symp_changes_sensory
    if(visual  == "[Not Available]" || visual  == "[Unknown]" ){
        visual  = NA
    }else{ if (visual  == "NO") NO = c(NO,"visual")
        else YES = c(YES, "visual")
    }
    if(motor   == "[Not Available]" || motor   == "[Unknown]" ){
        motor   = NA
    }else{ if (motor   == "NO") NO = c(NO,"motor")
        else YES = c(YES, "motor")
    }
    if(mental  == "[Not Available]" || mental  == "[Unknown]" ){
        mental  = NA
    }else{ if (mental  == "NO") NO = c(NO,"mental")
        else YES = c(YES, "mental")
    }
    if(sensory  == "[Not Available]" || sensory  == "[Unknown]" ){
        sensory  = NA
    }else{ if (sensory  == "NO") NO = c(NO,"sensory")
        else YES = c(YES, "sensory")
    }
    if(length(YES)==0) YES=NA
    if(length(NO)==0) NO=NA
    Symptoms = list(YES=YES, NO=NO)
    
    First.Symptom <- tbl.pt.Sub$related_symptom_first_present
    if(First.Symptom == "[Not Available]") First.Symptom=NA
    
    First.Symptom.Duration <- tbl.pt.Sub$first_symptom_longest_duration
    if(First.Symptom.Duration== "[Not Available]") First.Symptom.Duration=NA
    
    Allergy.Food.ind  <- tbl.pt.Sub$allergy_food_dx_indicator
    Allergy.Food.Type <- tbl.pt.Sub$allergy_food_dx_type
    Allergy.Food.Age  <- tbl.pt.Sub$allergy_food_dx_age
    
    if(is.na(Allergy.Food.ind) || Allergy.Food.ind == "[Unknown]"){
        Food.Allergy = NA
    }else{
        if(Allergy.Food.ind == "NO") Food.Allergy = "No"
        else{
            if(Allergy.Food.Type == "[Not Available]" || Allergy.Food.Type == "[Unknown]")
            Allergy.Food.Type = NA
            if(Allergy.Food.Age == "[Not Available]")
            Allergy.Food.Age = NA
            if(is.na(Allergy.Food.Type)) Food.Allergy = "No"
            else{
                Food.Allergy = paste(Allergy.Food.Type, Allergy.Food.Age, sep=":")
            }
        }
    }
    
    Allergy.Animal.ind  <- tbl.pt.Sub$allergy_animals_insects_dx_indicator
    Allergy.Animal.Type <- tbl.pt.Sub$allergy_animals_insects_dx_type
    Allergy.Animal.Age  <- tbl.pt.Sub$allergy_animals_insects_dx_age
    
    if(is.na(Allergy.Animal.ind) || Allergy.Animal.ind == "[Unknown]"){
        Animal.Allergy = NA
    }else{
        if(Allergy.Animal.ind == "NO") Animal.Allergy = "No"
        else{
            if(Allergy.Animal.Type == "[Not Available]" || Allergy.Animal.Type == "[Unknown]")
            Allergy.Animal.Type = NA
            if(Allergy.Animal.Age == "[Not Available]")
            Allergy.Animal.Age = NA
            if(is.na(Allergy.Animal.Type)) Animal.Allergy = "No"
            else{
                Animal.Allergy = paste(Allergy.Animal.Type, Allergy.Animal.Age, sep=":")
            }
        }
    }
    
    
    Age.First.Allergy <- tbl.pt.Sub$asthma_eczema_allergy_first_dx
    if(Age.First.Allergy == "[Not Available]") Age.First.Allergy = NA
    
    
    First_Tx_Outcome <- tbl.pt.Sub$treatment_outcome_first_course
    if(First_Tx_Outcome == "[Not Available]" || First_Tx_Outcome == "[Unknown]" ||
    First_Tx_Outcome == "[Not Applicable]" ){ First_Tx_Outcome = NA
    }else{
        First_Tx_Outcome = tolower(First_Tx_Outcome)
    }
    return(list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(History = History,
    Symptoms=Symptoms, First.Symptom=First.Symptom, First.Symptom.Duration=First.Symptom.Duration,
    Food.Allergy=Food.Allergy,Animal.Allergy=Animal.Allergy,Age.First.Allergy=Age.First.Allergy,
    First.Treatment.Outcome=First_Tx_Outcome)))
} #create.Background.record
#-------------
 x <- create.Background.record("TCGA-CS-6290")
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
 checkEquals(names(x[["Fields"]]), c("History","Symptoms","First.Symptom","First.Symptom.Duration","Food.Allergy",
    "Animal.Allergy","Age.First.Allergy","First.Treatment.Outcome"))
  
x
 checkEquals(x, list(PatientID="TCGA.CS.6290", PtNum=1, study=study, Name="Background",
    Fields=list(History=list(YES=c("seizures","family cancer"),
    NO=c("ionizing rt","headaches","eczema","dust mold", "neoadjuvant medication",
    "family brain tumor","asthma","hay fever","neoadjuvant steroid")),
    Symptoms=list(YES=NA,NO=c("visual","motor","mental","sensory")),
    First.Symptom="Seizures",
    First.Symptom.Duration="0 - 30 Days",
    Food.Allergy="No", Animal.Allergy="No",Age.First.Allergy=NA, First.Treatment.Outcome=NA)))
 x <- create.Background.record("TCGA-QH-A6CU") # treatment_outment_first_course == "[Not Applicable]"
    checkEquals(x, list(PatientID="TCGA.QH.A6CU", PtNum=275, study=study, Name="Background",
    Fields=list(History=list(YES=c("seizures","dust mold","neoadjuvant medication",
    "hay fever","neoadjuvant steroid","family cancer"),
    NO=c("ionizing rt","headaches","eczema","family brain tumor","asthma")),
    Symptoms=list(YES=c("mental"),NO=c("visual","motor","sensory")),
    First.Symptom="Seizures",
    First.Symptom.Duration="0 - 30 Days",
    Food.Allergy="No", Animal.Allergy="No",Age.First.Allergy="> 20 Years", First.Treatment.Outcome=NA)))
unique(tbl.pt$idh1_mutation_test_method)
colnames(tbl.pt)
unique(tbl.pt$idh1_mutation_test_method)
unique(tbl.pt$idh1_mutation_f)
unique(tbl.pt$idh1_mutation_found)
unique(tbl.pt$idh1_mutation_found)
patient.id<-"TCGA-CS-6290"
tbl.pt.Sub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pt.Sub) == 0)
    return(list())
tbl.pt.Sub
unique(tbl.pt$idh1_mutation_test_method)
unqiue(tbl.pt$dh1_mutation_found
)
unique(tbl.pt$dh1_mutation_found
)
unique(tbl.pt$idh1_mutation_found)
create.Tests.record <- function(patient.id)
{   tbl.pt.Sub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pt.Sub) == 0)
    return(list())
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Tests"
    
    Type <- tbl.pt.Sub$idh1_mutation_test_method
    if(Type == "[Not Available]") Type = NA
    Res  <- tbl.pt.Sub$idh1_mutation_found
    if(Res == "[Not Available]" || Res == "[Unknown]") Res = NA
    else{ if(Res == "YES") Res = "Yes"
          if(Res == "NO") Res = "No"
    }
    list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(Date=NA,
    Type=Type, Test="IDH1",Res=Res)))
} #create.Tests.record
#----------------------------
create.Tests.record <- function(patient.id)
{   tbl.pt.Sub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pt.Sub) == 0)
    return(list())
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Tests"
    
    Type <- tbl.pt.Sub$idh1_mutation_test_method
    if(Type == "[Not Available]") Type = NA
    Res  <- tbl.pt.Sub$idh1_mutation_found
    if(Res == "[Not Available]" || Res == "[Unknown]") Res = NA
    else{ if(Res == "YES") Res = "Yes"
          if(Res == "NO") Res = "No"
    }
    list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(Date=NA,
    Type=Type, Test="IDH1",Res=Res))
} #create.Tests.record
#---------------------------
x <- create.Tests.record("TCGA-CS-6290")
x
x <- create.Tests.record(tcga.ids[1])
x
x <- create.Tests.record(tcga.ids[2])
x
x <- create.Tests.record(tcga.ids[3])
x
tbl.pt$idh1_mutation_found
x <- create.Tests.record(tcga.ids[86])
x
x <- create.Tests.record(tcga.ids[402])
x
x <- create.Tests.record("TCGA-CS-6290")
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
x
x <- create.Tests.record(tcga.ids[86])
x
    x <- create.Tests.record("TCGA-CS-6290")
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(x, list(PatientID="TCGA.CS.6290", PtNum=1, study=study, Name="Tests",
                Fidles=list(Date=NA, Type=NA, Test="IDH1",Res=NA)))
    x <- create.Tests.record(tcga.ids[86])
    checkEquals(x, list(PatientID="TCGA.HW.7489", PtNum=86, study=study, Name="Tests",
    Fidles=list(Date=NA, Type="Sequence Analysis", Test="IDH1",Res="Yes")))
    x <- create.Tests.record(tcga.ids[402])
x <- create.Tests.record("TCGA-CS-6290")
x
checkEquals(x$Fields, list(Date=NA, Type=NA, Test="IDH1",Res=NA))
checkEquals(x$PatientID, "TCGA.CS.6290")
checkEqua)
checkEquals(x, list(PatientID="TCGA.CS.6290", PtNum=1, study=study, Name="Tests",Fidles=list(Date=NA, Type=NA, Test="IDH1",Res=NA)))
x <- create.Tests.record("TCGA-CS-6290")
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(x, list(PatientID="TCGA.CS.6290", PtNum=1, study=study, Name="Tests",Fields=list(Date=NA, Type=NA, Test="IDH1",Res=NA)))
    x <- create.Tests.record(tcga.ids[86])
    checkEquals(x, list(PatientID="TCGA.HW.7489", PtNum=86, study=study, Name="Tests",
    Fields=list(Date=NA, Type="Sequence Analysis", Test="IDH1",Res="Yes")))
    x <- create.Tests.record(tcga.ids[402])
x
source("createEventList.R")
x <- create.Absent.record("TCGA-DB-A4X9")
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "Radiation", "Drug"))
    checkEquals(x[[1]], list(PatientID="TCGA.DB.A4X9", PtNum=193, study=study, Name="Absent", Fields=list(date="05/17/2011", Radiation="TRUE", Drug="TRUE")))
 x <- create.Absent.record("TCGA-FG-A60K") #has omf
    checkEquals(x[[1]], list(PatientID="TCGA.FG.A60K", PtNum=254, study=study, Name="Absent",Fields=list(date="02/11/2009", Radiation="TRUE", Drug="TRUE")))
 x <- create.Absent.record("TCGA-FG-A4MT") #has omf
    checkEquals(x[[1]], list(PatientID="TCGA.FG.A4MT", PtNum=197, study=study, Name="Absent",Fields=list(date="05/15/2011", Radiation="FALSE", Drug="TRUE")))
test_create.Tests.record()
create.Tests.record <- function(patient.id)
{   tbl.pt.Sub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pt.Sub) == 0)
    return(list())
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Tests"
    
    Type <- tbl.pt.Sub$idh1_mutation_test_method
    if(Type == "[Not Available]") Type = NA
    Res  <- tbl.pt.Sub$idh1_mutation_found
    if(Res == "[Not Available]" || Res == "[Unknown]") Res = NA
    else{ if(Res == "YES") Res = "Yes"
          if(Res == "NO") Res = "No"
    }
    list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields = list(Date=NA,
    Type=Type, Test="IDH1",Res=Res))
} #create.Tests.record
#--------------------------------------------
x <- create.Tests.record("TCGA-CS-6290")
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(x, list(PatientID="TCGA.CS.6290", PtNum=1, study=study, Name="Tests",Fields=list(Date=NA, Type=NA, Test="IDH1",Res=NA)))
    x <- create.Tests.record(tcga.ids[86])
    checkEquals(x, list(PatientID="TCGA.HW.7489", PtNum=86, study=study, Name="Tests",
    Fields=list(Date=NA, Type="Sequence Analysis", Test="IDH1",Res="Yes")))
x <- create.Tests.record(tcga.ids[402])
    checkEquals(x, list(PatientID="TCGA.TM.A84C", PtNum=1, study=study, Name="Tests",
    Fields=list(Date=NA, Type="IHC", Test="IDH1",Res="No")))
x
 x <- create.Tests.record("TCGA-CS-6290")
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(x, list(PatientID="TCGA.CS.6290", PtNum=1, study=study, Name="Tests",Fields=list(Date=NA, Type=NA, Test="IDH1",Res=NA)))
    x <- create.Tests.record(tcga.ids[86])
    checkEquals(x, list(PatientID="TCGA.HW.7489", PtNum=86, study=study, Name="Tests",
    Fields=list(Date=NA, Type="Sequence Analysis", Test="IDH1",Res="Yes")))
    x <- create.Tests.record(tcga.ids[402])
    checkEquals(x, list(PatientID="TCGA.TM.A84C", PtNum=402, study=study, Name="Tests",
    Fields=list(Date=NA, Type="IHC", Test="IDH1",Res="No")))
source("createEventList.R")
length(history)
history <- parseEvents(patients)
patients <- tcga.ids
   
   patients <- gsub("\\.", "\\-", patients)
   checkTrue(all(patients %in% tbl.pt[,1]))
   
   history <- parseEvents(patients)
length(history)
run <- function()
{
      
      # the patient clinical annotation data use IDs in this style
      #     "TCGA-02-0001" "TCGA-02-0003" "TCGA-02-0006" "TCGA-02-0007"
      # whereas we prefer
      #     "TCGA.02.0001" "TCGA.02.0003" "TCGA.02.0006" "TCGA.02.0007"
      # adapt the incoming patients to the tcga patient clinical style
      # the patient ids are returned to the dot form in the functions
      # defined and called below.
   patients <- tcga.ids
   
   patients <- gsub("\\.", "\\-", patients)
   checkTrue(all(patients %in% tbl.pt[,1]))
   
   history <- parseEvents(patients)
   checkEquals(length(history), 4899)
   checkEquals(as.list(table(unlist(lapply(history, function(e) e["Name"])))), list(`Absent`=120,`Background`=459, `Birth`=459, `Diagnosis`=459,`Drug`=498,`Encounter`=897, `Pathology`=473, `Procedure`=181,`Progression`=154, `Radiation`=281, `Status`=459, `Tests`=459))
   
   serialized.file.name <- "../../extdata/history.RData"
   #printf("saving history to %s", serialized.file.name)
   
   save(history, file=serialized.file.name)
} # run
#-----------------------------------------------------------------------------
run()
q()
