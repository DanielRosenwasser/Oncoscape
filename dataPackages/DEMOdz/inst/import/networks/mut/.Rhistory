selectNodes(rcy, nodes(g)[which(nchar(nodes(g)) < 12)])
selectNodes(rcy, nodes(g)[which(nchar(nodes(g)) < 12)])
fitContent(rcy)
fitContent(rcy)
fitContent(rcy)
fitContent(rcy)`
fitContent(rcy)
fitContent(rcy)
getLayout(rcy)
x <- getLayout(rcy)
layout
restoreLayout(x)
restoreLayout(rcy,x)
saveLayout(rcy, "tmp.layout")
saveLayout(rcy, "tmp.layout")
restoreLayout(rcy, "tmp.layout")
saveLayout(rcy, "layout.RData")
reload()
runTests()
reload()
rcy <- run()
args(restoreLayout)
fitContent(rcy)
reload(); rcy <- run()
q()
reload(); rcy <- run()
reload(); runTests(); rcy <- run()
reload(); runTests(); rcy <- run()
patient.orphans
gene.orphans
Q
reload(); runTests(); rcy <- run()
patient.orphans
n
c
patient.orphans
names(result)
patient.orphans
gene.orphans
c
c
reload(); runTests(); rcy <- run()
c
c
reload(); runTests(); rcy <- run()
c
patient.orphans
length(patient.orphans)
length(gene.orphans)
c
c
reload()
run
run()
dim(tbl)
length(patient.orphans)
Q
reload(); run()
c
q()
length(patient.orphans)
reload(); runTests()
rcy <- run()
q()
reload(); runTests(); rcy <- run()
q()
dir()
reload()
search()
ls(2)
simpleDemoGraph()
x <- RCyjs(portRange=9047:9057, quiet=TRUE, graph=simpleDemoGraph())
x <- RCyjs(portRange=9047:9057, quiet=TRUE, graph=simpleDemoGraph())
reload()
runTests()
run()
rcy
reload(); runTests(); rcy <- run()
fitContent(rcy)
fitContent(rcy)
scan("2nodes1edge.json")
scan(file="2nodes1edge.json", what=character())
scan(file="2nodes1edge.json", what=character(), sep="\n")
paste(scan(file="2nodes1edge.json", what=character(), sep="\n"), collapse="")
g.markers.json <- paste(scan(file="2nodes1edge.json", what=character(), sep="\n"), collapse="")
save(g.markers.json, file="../../../extdata/markers.json.RData")
g.markers.json <- paste(scan(file="2nodes1edge.json", what=character(), sep="\n"), collapse="")
nchar(g.markers.json)
nchar(sub(" ", "", g.markers.json))
g.markers.json
nchar(gsub(" ", "", g.markers.json))
g.markers.json <- gsub(" ", "", g.markers.json)
nchar(g.markers.json)
save(g.markers.json, file="../../../extdata/markers.json.RData")
reload(); runTests(); rcy <- run()
q()
reload(); runTests(); rcy <- run()
getJSON(rcy)
args(fromJSON)
g.markers.json
list.file("../../../extdata")
list.files("../../../extdata")
wdth(100)
list.files("../../../extdata")
print(load("../../../extdata/markers.json.RData"))
g.markers.json
JSON.parse(g.markers.json)
fromJSON(g.markers.json)
fromJSON(g.markers.json, simplifyVector=FALSE)
?fromJSON
q()
reload(); runTests(); rcy <- run()
getJson(rcy)
getJSON(rcy)
q()
reload(); runTests(); rcy <- run()
s <- getJSON(rcy)
s
nchar(s)
g.markers.json <- gsub(" ", "", s)
nchar(g.markers.json)
save(g.markers.json, file="../../../extdata/markers.json.RData")
   library(TCGAgbm)
   gbm <- TCGAgbm()
   mtx.mut.gbm <- matrices(gbm)$mtx.mut
   names.trimmed <- sub(".0[12]$", "", rownames(mtx.mut.gbm))
   rownames(mtx.mut.gbm) <- names.trimmed
    
   gene.mutation.counts <- apply(mtx.mut.gbm, 2, function(column) length(which(column != "")))
   genes <- names(tail(sort(gene.mutation.counts), n=10))

genes
genes
reload()
dim(tbl)
tbl
head(result)
wdth(80)
head(result)
q()
reload(); runTests(); rcy <- run()
q()
   genes <- names(tail(sort(gene.mutation.counts), n=10))
reload(); runTests(); rcy <- run()
tbl <- test_createChromosomeTable()
head(tbl)
reload()
reload()
reload()
g
addGraph(rcy, g)
redraw(rcy)
reload(); runTests(); rcy <- run()
g
addGraph(rcy, g)
nodes(g)
grep("^chr", nodes(g), v=TRUE)
selectNodes(rcy, grep("^chr", nodes(g), v=TRUE))
layoutStrategies(rcy)
fitSelectedContent(rcy)
q()
tbl <- test_createChromosomeTable()
reload(); runTests(); rcy <- run()
reload(); runTests(); rcy <- run()
g
addGraph(rcy, g)
nodes(g)
selectNodes(rcy, nodes(g))
fitSelectedContent(rcy)
addGraph(rcy, g)
q()
reload(); runTests(); rcy <- run()
reload(); runTests(); rcy <- run()
q()
reload(); runTests(); rcy <- run()
fitSelectedContent(rcy)
g
nodes(g)
nodes(g)[which(nchar(nodes(g) < 12)]
nodes(g)[which(nchar(nodes(g) < 12))]
nodes(g)[which(nchar(nodes(g)) < 12)]
reload(); runTests(); rcy <- run()
layout(rcy, "cose")
nodes(g)
getNodes(rcy)
selectNodes(rcy, grep("^TCGA", getNodes(rcy)$name, v=T))
hideAllEdges(rcy)
saveLayout(rcy, "xxxLayout.RData")
q()
reload(); runTests(); rcy <- run()
restoreLayout(rcy, "xxxLayout.RData")
hideAllEdges(rcy)
showAllEdges(rcy)
saveLayout(rcy, "xxxLayout.RData")
q()
reload(); runTests(); rcy <- run()
restoreLayout(rcy, "xxxLayout.RData")
sfn(rcy)
q()
relaod()
reload()
runTests()
reload(); runTests()
reload(); runTests()
dim(tbl)
tbl
reload(); runTests(); run()
reload(); runTests(); run()
getPosition(rcy, getSelectedNodes(rcy)[1])
getSelectedNodes(rcy)
getSelectedNode(rcy)
getSelectedNodes(rcy)
rcy
reload(); runTests(); rcy <- run()
getSelectedNodes(rcy)
getSelectedNodes(rcy)$name
getPosition(rcy, getSelectedNodes(rcy)$name)
q()
reload(); runTests(); rcy <- run()
getPosition(rcy, getSelectedNodes(rcy)$name)
layoutSelectionInGrid(rcy, 1546.391,  -531.8198, 800, 800)
q()
reload(); runTests(); rcy <- run()
layoutSelectionInGrid(rcy, 1546.391,  -531.8198, 800, 800)
q()
reload(); runTests(); rcy <- run()
layoutSelectionInGrid(rcy, 1546.391,  -531.8198, 800, 800)
layoutSelectionInGrid(rcy, 1546.391,  -531.8198, 800, 800)
q()
reload(); runTests(); rcy <- run()
layoutSelectionInGrid(rcy, 1546.391,  -531.8198, 800, 800)
q()
reload(); runTests(); rcy <- run()
layoutSelectionInGrid(rcy, 1546.391,  531.8198, 800, 800)
layoutSelectionInGrid(rcy, 1546.391,  1531.8198, 800, 800)
q()
reload(); runTests(); rcy <- run()
getPosition(rcy, getSelectedNodes(rcy)$name)
layoutSelectionInGrid(rcy, 1546.391,  -800.8198, 800, 800)
layoutSelectionInGrid(rcy, 1546.391,  -100.8198, 800, 800)
getPosition(rcy, getSelectedNodes(rcy)$name)
q()
reload(); runTests(); rcy <- run()
layoutSelectionInGrid(rcy, 1546.391,  -100.8198, 800, 800)
q()
reload(); runTests(); rcy <- run()
layoutSelectionInGrid(rcy, 1546.391,  -500.8198, 800, 800)
q()
reload(); runTests(); rcy <- run()
q()
q()
reload(); runTests(); rcy <- run()
dir()
layout(rcy,"cose")
showAllEdges(rcy)
reload(); runTests(); rcy <- run()  rcy <-  RCyjs(portRange=9047:9057, quiet=TRUE, graph=g)
showAllEdges(rcy)
g
eda(g, "edgeType")
noa(g, "nodeType")
layout(rcy, "cose")
dim(tbl.chrom)
rcy
node(rcy@graph)
nodes(rcy@graph)
which(nchar(nodes(rcy@graph)) < 12)
genes
dim(tbl.chrom)
showAllEdges(rcy)
  fitContent(rcy)
Sys.time()
?Sys.time
system.time()
as.numeric(Sys.time())
as.numeric(Sys.time())
saveLayout(rcy, sprintf("layout.%f", as.numeric(Sys.time())))
dir()
genes
dim(tbl)
tbl
tbl
keepers
tbl$col
genes
keepers
keepers
dim(tbl$col)
dim(x$tbl$col)
x
colnames(x$tbl)
head(x$tbl$col)
dim(tbl)
getPosition(rcy, getSelectedNodes(rcy)$name[1])
layoutSelectionInGrid(rcy, 0, 0, 800, 800)
showAllEdges(rcy)
saveLayout(rcy, sprintf("layout.%f", as.numeric(Sys.time())))
x
genes
dim(tbl)
tbl$row
tbl$col
sort(unique(tbl$col))
dim(tbl)
intersect(tbl$col, mutant.genes)
intersect(tbl$col, mutant.genes)
length(loss2.genes)
length(gain1.genes)
length(loss1.genes)
length(gain2.genes)
length(gain2.genes)
length(mutant.genes)
gain1.for.free
length(gain1.genes)
reload()
goi()
reload()
goi()
wdth(120)
goi()
reload(); goi()
reload(); goi()
reload(); runTests()
reload(); runTests()
reload(); runTests()
mutant.genes
reload()
reload()
result$tbl
reload()
genes.of.interest
genes
n
n
n
n
Q
reload()
gene.count
dim(mtx)
n
n
n
n
reload()
n
n
n
rows
cols
n
reload()
indices
c
dim(mtx)
rows
cols
n
vals
c
result
reload(); runTests()
c
c
c
reload(); runTests()
row.orphans
length(row.orphans)
xx <- c("TCGA.02.0014","TCGA.02.0021","TCGA.02.0028","TCGA.02.0033","TCGA.02.0037","TCGA.02.0080",
                              "TCGA.02.0114","TCGA.02.0432","TCGA.06.0182","TCGA.06.0201","TCGA.06.0402","TCGA.06.0409",
                              "TCGA.06.0413", "TCGA.08.0344", "TCGA.12.0656", "TCGA.12.0657"))
xx <- c("TCGA.02.0014","TCGA.02.0021","TCGA.02.0028","TCGA.02.0033","TCGA.02.0037","TCGA.02.0080",
                              "TCGA.02.0114","TCGA.02.0432","TCGA.06.0182","TCGA.06.0201","TCGA.06.0402","TCGA.06.0409",
                              "TCGA.06.0413", "TCGA.08.0344", "TCGA.12.0656", "TCGA.12.0657")
length(xx)
sort(row.orphans)
wdth(80)
sort(row.orphans)
length(col.orphans)
result
good.values
reload();runTests()
dim(mtx.oi)
length(goi())
fitContent(rcy)
all.genes
length(all.genes)
tbl
dim(mtx.oi)
dim(mtx.cn)
dim(gistic.2$tbl)
patient.orphans
gene.orphans
g.p2
layout(rcy, "cose")
tbl
patient.orphans
gene.orphans
fitContent(rcy)
g.p1
showAllEdges(rcy)
layout(rcy, "cose")
selectNodes(rcy, rownames(mtx.cn))
hideAllEdges(rcy)
fitContent(rcy)
getPosition(rcy, getSelectedNodes(rcy)[1]$name)
getSelectedNodes(rcy)[1,]$name
getPosition(rcy, getSelectedNodes(rcy)[1,]$name)
layoutSelectionInGrid(rcy, 1441.766, 352.0428, 800, 800)
saveLayout(rcy, sprintf("layout.%f", as.numeric(Sys.time())))
q()
reload()
fitContent(rcy)
showEdges(rcy, "mutation")
q()
reload()
showEdges(rcy, "mutation")
fitContent(rcy)
dir()
wdth(100)
dir()
sort(dir())
restoreLayout(rcy, "layout.1433285121.679721")
fitContent(rcy)
showAllEdges(rcy)
sfn(rcy)
sfn(rcy)
saveLayout(rcy, sprintf("layout.%f", as.numeric(Sys.time())))
fitContent(rcy)
fitContent(rcy)
sfn(rcy)
sfn(rcy)
sfn(rcy)
sfn(rcy)
sfn(rcy)
sfn(rcy)
saveLayout(rcy, sprintf("layout.%f", as.numeric(Sys.time())))
saveLayout(rcy, sprintf("layout.%f", as.numeric(Sys.time())))
q()
reload(); demo()
reload(); rcy <- demo()
q()
reload(); rcy <- demo()
fitContent(rcy)
restoreLayout(rcy, "layout.1433286684.465020")
fitContent(rcy)
showEdges(rcy, "mutation")
hideEdges(rcy, "mutation")
library(TCGAgbm)
library(TCGAgbm)
gbm <- TCGAgbm()
names(matrices(gbm))
mut <- matrices(gbm)$mtx.mut
dim(mut)
patient <- 'TCGA.02.0006'
grep(patient, rownames(mut))
head(rownames(mut))
grep("TCGA.02.00", rownames(mut), v=T)
which(!is.na(mut$PTEN))
which(!is.na(mut[, "PTEN"]))
head(which(!is.na(mut[, "PTEN"])))
mut[head(which(!is.na(mut[, "PTEN"]))), "PTEN"]
mut[head(which(nchar(mut[, "PTEN"] > 0))), "PTEN"]
mut[head(which(nchar(mut[, "PTEN"]) > 0)), "PTEN"]
mut[which(nchar(mut[, "PTEN"]) > 0), "PTEN"]
wdth(60)
mut[which(nchar(mut[, "PTEN"]) > 0), "PTEN"]
wdth(80)
mut[which(nchar(mut[, "PTEN"]) > 0), "PTEN"]
q()
reload(); rcy <- demo()
restoreLayout(rcy, "layout.1433286684.465020")
fitContent(rcy)
showAllEdges(rcy)
hideAllEdges(rcy)
showEdges(rcy, "mutation")
hideEdges(rcy, "mutation")
q()
reload(); rcy <- demo()
restoreLayout(rcy, "layout.1433286684.465020")
fitContent(rcy)
showEdges(rcy, "mutation")
hideEdges(rcy, "mutation")
showEdges(rcy, "chromosome")
saveLayout(rcy, sprintf("layout.%f", as.numeric(Sys.time())))
hideAllEdges(rcy)
edaNames(rcy@graph)
unique(eda(rcy@graph, "edgeType"))
showEdges(rcy, "cnGain.1")
showEdges(rcy, "chromosome")
showEdges(rcy, "cnGain.2")
hideAllEdges(rcy)
showEdges(rcy, "cnGain.2")
showEdges(rcy, "chromosome")
showEdges(rcy, "cnLoss.2")
showEdges(rcy, "cnLoss.1")
s <- getJSON(rcy)
nchar(s)
g.markers.json <- gsub(" ", "", s)
save(g.markers.json, file="../../../extdata/markers.json.RData")
q()
