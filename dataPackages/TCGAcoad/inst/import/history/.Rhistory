      result[[good.records.found]] <- new.event
      }} # for pathEvent
      
   if(nrow(tbl.omfSub)>0){
     for(omfEvent in 1:nrow(tbl.omfSub)){
      disease <- tbl.omfSub$other_malignancy_anatomic_site[omfEvent]
      omfOffset = tbl.omfSub$days_to_other_malignancy_dx[omfEvent]
      histology <- tbl.omfSub$other_malignancy_histological_type[omfEvent]
      if(disease   == "[Not Available]") disease = NA
      if(histology == "[Not Available]") histology = NA
      if(omfOffset == "[Not Available]" | omfOffset == "[Pending]"){ omf.date = NA
      }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))      }
      
       new.event <- list(PatientID=patient.id,
                        PtNum=patient.number,
                        study=study,
                        Name=name,
                        Fields = list(date=omf.date, disease=disease, histology=histology, bucket="High Grade Glioma",collection=NA, grade="G4"))
   
       good.records.found <- good.records.found + 1
       result[[good.records.found]] <- new.event
     } }
   result[1:good.records.found]
   
} # create.Pathology.record
#---------------------------------------------------------------------------------------------------
    # 530 good rows
  tbl.good <- subset(tbl.pt, bcr_patient_barcode %in% patient.ids )
  ids <- unique(tbl.good$bcr_patient_barcode)   # 432
  count <- 1
  result <- vector("list", nrow(tbl.good))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Pathology.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
     # some number of the expected events will fail, often (always?) because
     # one or both dates is "[Not Available]".  count tells us how many good 
     # we found
    deleters <- which(unlist(lapply(result, is.null)))
deleters
tbl.good <- subset(tbl.pt, bcr_patient_barcode %in% patient.ids )
  tbl.omfGood <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids )
  ids <- unique(tbl.good$bcr_patient_barcode)   # 432
  count <- 1
  result <- vector("list", nrow(tbl.good))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Pathology.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
     # some number of the expected events will fail, often (always?) because
     # one or both dates is "[Not Available]".  count tells us how many good 
     # we found
    deleters <- which(unlist(lapply(result, is.null)))
deleters
length(ids)
tbl.good <- subset(tbl.pt, bcr_patient_barcode %in% patient.ids )
  tbl.omfGood <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids )
  ids <- unique(c(tbl.good$bcr_patient_barcode,tbl.omfGood$bcr_patient_barcode))  # 432
  count <- 1
  result <- vector("list", nrow(tbl.good))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Pathology.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
     # some number of the expected events will fail, often (always?) because
     # one or both dates is "[Not Available]".  count tells us how many good 
     # we found
    deleters <- which(unlist(lapply(result, is.null)))
deleters
tbl.good
dim(tbl.good)
tbl.good[250,[
tbl.good[250,]
x <- create.Pathology.record("TCGA-AY-6196")
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection", "grade"))
x
create.Pathology.record <- function(patient.id)
{
    
    tbl.pathSub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pathSub) == 0 & nrow(tbl.omfSub) == 0)
    return(list())
    
    diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
    diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Pathology"
    
    result <- vector("list", nrow(tbl.pathSub)+nrow(tbl.omfSub))
    good.records.found <- 0
    
    if(nrow(tbl.pathSub) >0){
        for(pathEvent in 1:nrow(tbl.pathSub)){
            
            pathology.offset <-   as.integer(tbl.pathSub$days_to_initial_pathologic_diagnosis[pathEvent])
            patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
            patient.number <- as.integer(id.map[patient.id])
            date <- reformatDate(format(diagnosis.date + pathology.offset))
            
            pathDisease <- tbl.pathSub$tumor_tissue_site[pathEvent]
            pathHistology <- tbl.pathSub$histologic_diagnosis[pathEvent]
            collection <- tbl.pathSub$prospective_collection[pathEvent]
            T.Stage <- tbl.pathSub$ajcc_tumor_pathologic_pt[pathEvent]
            N.Stage <- tbl.pathSub$ajcc_nodes_pathologic_pn[pathEvent]
            M.Stage <- tbl.pathSub$ajcc_metastasis_pathologic_pm[pathEvent]
            S.Stage <- tbl.pathSub$ajcc_pathologic_tumor_stage[pathEvent]
            staging.System <- tbl.pathSub$ajcc_staging_edition[pathEvent]
            
            if(grepl("-",pathHistology)) pathHistology <- strsplit(pathHistology,"-")[[1]][1]
            
            if(collection == "YES"){ collection = "prospective"
            } else if( tbl.pathSub$retrospective_collection  == "YES"){ collection = "retrospective"
            } else { collection = NA }
            
            if (T.Stage == "[Not Available]") T.Stage = NA
            if (N.Stage == "[Not Available]") N.Stage = NA
            if (M.Stage == "[Not Available]") M.Stage = NA
            if (S.Stage == "[Not Available]") S.Stage = NA
            if (staging.System == "[Not Available]") staging.System = NA
            new.event <- list(PatientID=patient.id,
            PtNum=patient.number,
            study=study,
            Name=name,
            Fields = list(date=date, disease=pathDisease, histology=pathHistology,bucket=pathHistology, collection=collection, T.Stage=T.Stage, N.Stage=N.Stage, M.Stage=M.Stage,
            S.Stage=S.Stage,staging.System=staging.System))
            good.records.found <- good.records.found + 1
            result[[good.records.found]] <- new.event
        }
    } # for pathEvent
    
    if(nrow(tbl.omfSub)>0){
        for(omfEvent in 1:nrow(tbl.omfSub)){
            disease <- tbl.omfSub$other_malignancy_anatomic_site[omfEvent]
            omfOffset = tbl.omfSub$days_to_other_malignancy_dx[omfEvent]
            histology <- tbl.omfSub$other_malignancy_histological_type[omfEvent]
            
            if(disease   == "[Not Available]") disease = NA
            if(histology == "[Not Available]") histology = NA
            if(omfOffset == "[Not Available]"){ omf.date = NA
            }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))}
            
            new.event <- list(PatientID=patient.id,
            PtNum=patient.number,
            study=study,
            Name=name,
            Fields = list(date=omf.date, disease=disease, histology=histology,bucket=histology, collection=NA, T.Stage=NA, N.Stage=NA, M.Stage=NA,S.Stage=NA,staging.System=NA))
            
            good.records.found <- good.records.found + 1
            result[[good.records.found]] <- new.event
        } }
    
    
    result[1:good.records.found]
    
} # create.Pathology.record
#------------------------------------------------------------------------------------------------------------------------------------------
 tbl.good <- subset(tbl.pt, bcr_patient_barcode %in% patient.ids )
    tbl.omfSub <- subset(tbl.omf,bcr_patient_barcode %in% patient.ids )
    ids <- unique(tbl.good$bcr_patient_barcode)   # 432
    
    count <- 1
    result <- vector("list", nrow(tbl.good))
    for(id in ids){
        #printf("id: %s", id)
        new.list <- create.Pathology.record(id)
        range <- count:(count+length(new.list)-1)
        result[range] <- new.list
        count <- count + length(new.list)
    } # for id
    
    # some number of the expected events will fail, often (always?) because
    # one or both dates is "[Not Available]".  count tells us how many good
    # we found
    deleters <- which(unlist(lapply(result, is.null)))
    if(length(deleters) > 0)
deleters
id
match(id,ids)
patient.id<-id
 tbl.pathSub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pathSub) == 0 & nrow(tbl.omfSub) == 0)
    return(list())
    
    diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
    diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Pathology"
    
    result <- vector("list", nrow(tbl.pathSub)+nrow(tbl.omfSub))
    good.records.found <- 0
dim(tbl.pathSub)
dim(tbl.omfSub)
if(nrow(tbl.pathSub) >0){
        for(pathEvent in 1:nrow(tbl.pathSub)){
            
            pathology.offset <-   as.integer(tbl.pathSub$days_to_initial_pathologic_diagnosis[pathEvent])
            patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
            patient.number <- as.integer(id.map[patient.id])
            date <- reformatDate(format(diagnosis.date + pathology.offset))
            
            pathDisease <- tbl.pathSub$tumor_tissue_site[pathEvent]
            pathHistology <- tbl.pathSub$histologic_diagnosis[pathEvent]
            collection <- tbl.pathSub$prospective_collection[pathEvent]
            T.Stage <- tbl.pathSub$ajcc_tumor_pathologic_pt[pathEvent]
            N.Stage <- tbl.pathSub$ajcc_nodes_pathologic_pn[pathEvent]
            M.Stage <- tbl.pathSub$ajcc_metastasis_pathologic_pm[pathEvent]
            S.Stage <- tbl.pathSub$ajcc_pathologic_tumor_stage[pathEvent]
            staging.System <- tbl.pathSub$ajcc_staging_edition[pathEvent]
            
            if(grepl("-",pathHistology)) pathHistology <- strsplit(pathHistology,"-")[[1]][1]
            
            if(collection == "YES"){ collection = "prospective"
            } else if( tbl.pathSub$retrospective_collection  == "YES"){ collection = "retrospective"
            } else { collection = NA }
            
            if (T.Stage == "[Not Available]") T.Stage = NA
            if (N.Stage == "[Not Available]") N.Stage = NA
            if (M.Stage == "[Not Available]") M.Stage = NA
            if (S.Stage == "[Not Available]") S.Stage = NA
            if (staging.System == "[Not Available]") staging.System = NA
            new.event <- list(PatientID=patient.id,
            PtNum=patient.number,
            study=study,
            Name=name,
            Fields = list(date=date, disease=pathDisease, histology=pathHistology,bucket=pathHistology, collection=collection, T.Stage=T.Stage, N.Stage=N.Stage, M.Stage=M.Stage,
            S.Stage=S.Stage,staging.System=staging.System))
            good.records.found <- good.records.found + 1
            result[[good.records.found]] <- new.event
        }
    } # for pathEvent
for(omfEvent in 1:nrow(tbl.omfSub)){
            disease <- tbl.omfSub$other_malignancy_anatomic_site[omfEvent]
            omfOffset = tbl.omfSub$days_to_other_malignancy_dx[omfEvent]
            histology <- tbl.omfSub$other_malignancy_histological_type[omfEvent]
            
            if(disease   == "[Not Available]") disease = NA
            if(histology == "[Not Available]") histology = NA
            if(omfOffset == "[Not Available]"){ omf.date = NA
            }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))}
            
            new.event <- list(PatientID=patient.id,
            PtNum=patient.number,
            study=study,
            Name=name,
            Fields = list(date=omf.date, disease=disease, histology=histology,bucket=histology, collection=NA, T.Stage=NA, N.Stage=NA, M.Stage=NA,S.Stage=NA,staging.System=NA))
            
            good.records.found <- good.records.found + 1
            result[[good.records.found]] <- new.event
        } }
  
    if(nrow(tbl.omfSub)>0){
        for(omfEvent in 1:nrow(tbl.omfSub)){
            disease <- tbl.omfSub$other_malignancy_anatomic_site[omfEvent]
            omfOffset = tbl.omfSub$days_to_other_malignancy_dx[omfEvent]
            histology <- tbl.omfSub$other_malignancy_histological_type[omfEvent]
            
            if(disease   == "[Not Available]") disease = NA
            if(histology == "[Not Available]") histology = NA
            if(omfOffset == "[Not Available]"){ omf.date = NA
            }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))}
            
            new.event <- list(PatientID=patient.id,
            PtNum=patient.number,
            study=study,
            Name=name,
            Fields = list(date=omf.date, disease=disease, histology=histology,bucket=histology, collection=NA, T.Stage=NA, N.Stage=NA, M.Stage=NA,S.Stage=NA,staging.System=NA))
            
            good.records.found <- good.records.found + 1
            result[[good.records.found]] <- new.event
        } }
omfEvent
disease <- tbl.omfSub$other_malignancy_anatomic_site[omfEvent]
            omfOffset = tbl.omfSub$days_to_other_malignancy_dx[omfEvent]
            histology <- tbl.omfSub$other_malignancy_histological_type[omfEvent]
disease
omfOffset
if(nrow(tbl.omfSub)>0){
        for(omfEvent in 1:nrow(tbl.omfSub)){
            disease <- tbl.omfSub$other_malignancy_anatomic_site[omfEvent]
            omfOffset = tbl.omfSub$days_to_other_malignancy_dx[omfEvent]
            histology <- tbl.omfSub$other_malignancy_histological_type[omfEvent]
            
            if(disease   == "[Not Available]" | disease == "[Pending]") disease = NA
            if(histology == "[Not Available]") histology = NA
            if(omfOffset == "[Not Available]"){ omf.date = NA
            }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))}
            
            new.event <- list(PatientID=patient.id,
            PtNum=patient.number,
            study=study,
            Name=name,
            Fields = list(date=omf.date, disease=disease, histology=histology,bucket=histology, collection=NA, T.Stage=NA, N.Stage=NA, M.Stage=NA,S.Stage=NA,staging.System=NA))
            
            good.records.found <- good.records.found + 1
            result[[good.records.found]] <- new.event
        } }
    
omfEvent
disease <- tbl.omfSub$other_malignancy_anatomic_site[omfEvent]
            omfOffset = tbl.omfSub$days_to_other_malignancy_dx[omfEvent]
            histology <- tbl.omfSub$other_malignancy_histological_type[omfEvent]
            
            if(disease   == "[Not Available]" | disease == "[Pending]") disease = NA
            if(histology == "[Not Available]") histology = NA
            if(omfOffset == "[Not Available]"){ omf.date = NA
            }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))}
            
omfOffset
if(nrow(tbl.omfSub)>0){
        for(omfEvent in 1:nrow(tbl.omfSub)){
            disease <- tbl.omfSub$other_malignancy_anatomic_site[omfEvent]
            omfOffset = tbl.omfSub$days_to_other_malignancy_dx[omfEvent]
            histology <- tbl.omfSub$other_malignancy_histological_type[omfEvent]
            
            if(disease   == "[Not Available]" | disease == "[Pending]") disease = NA
            if(histology == "[Not Available]") histology = NA
            if(omfOffset == "[Not Available]" | omfOffset == "[Pending]"){ omf.date = NA
            }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))}
            
            new.event <- list(PatientID=patient.id,
            PtNum=patient.number,
            study=study,
            Name=name,
            Fields = list(date=omf.date, disease=disease, histology=histology,bucket=histology, collection=NA, T.Stage=NA, N.Stage=NA, M.Stage=NA,S.Stage=NA,staging.System=NA))
            
            good.records.found <- good.records.found + 1
            result[[good.records.found]] <- new.event
        } }
    
    
create.Pathology.record <- function(patient.id)
{
    
    tbl.pathSub <- subset(tbl.pt, bcr_patient_barcode==patient.id)
    tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode==patient.id)
    if(nrow(tbl.pathSub) == 0 & nrow(tbl.omfSub) == 0)
    return(list())
    
    diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
    diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
    name <- "Pathology"
    
    result <- vector("list", nrow(tbl.pathSub)+nrow(tbl.omfSub))
    good.records.found <- 0
    
    if(nrow(tbl.pathSub) >0){
        for(pathEvent in 1:nrow(tbl.pathSub)){
            
            pathology.offset <-   as.integer(tbl.pathSub$days_to_initial_pathologic_diagnosis[pathEvent])
            patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
            patient.number <- as.integer(id.map[patient.id])
            date <- reformatDate(format(diagnosis.date + pathology.offset))
            
            pathDisease <- tbl.pathSub$tumor_tissue_site[pathEvent]
            pathHistology <- tbl.pathSub$histologic_diagnosis[pathEvent]
            collection <- tbl.pathSub$prospective_collection[pathEvent]
            T.Stage <- tbl.pathSub$ajcc_tumor_pathologic_pt[pathEvent]
            N.Stage <- tbl.pathSub$ajcc_nodes_pathologic_pn[pathEvent]
            M.Stage <- tbl.pathSub$ajcc_metastasis_pathologic_pm[pathEvent]
            S.Stage <- tbl.pathSub$ajcc_pathologic_tumor_stage[pathEvent]
            staging.System <- tbl.pathSub$ajcc_staging_edition[pathEvent]
            
            if(grepl("-",pathHistology)) pathHistology <- strsplit(pathHistology,"-")[[1]][1]
            
            if(collection == "YES"){ collection = "prospective"
            } else if( tbl.pathSub$retrospective_collection  == "YES"){ collection = "retrospective"
            } else { collection = NA }
            
            if (T.Stage == "[Not Available]") T.Stage = NA
            if (N.Stage == "[Not Available]") N.Stage = NA
            if (M.Stage == "[Not Available]") M.Stage = NA
            if (S.Stage == "[Not Available]") S.Stage = NA
            if (staging.System == "[Not Available]") staging.System = NA
            new.event <- list(PatientID=patient.id,
            PtNum=patient.number,
            study=study,
            Name=name,
            Fields = list(date=date, disease=pathDisease, histology=pathHistology,bucket=pathHistology, collection=collection, T.Stage=T.Stage, N.Stage=N.Stage, M.Stage=M.Stage,
            S.Stage=S.Stage,staging.System=staging.System))
            good.records.found <- good.records.found + 1
            result[[good.records.found]] <- new.event
        }
    } # for pathEvent
    
    if(nrow(tbl.omfSub)>0){
        for(omfEvent in 1:nrow(tbl.omfSub)){
            disease <- tbl.omfSub$other_malignancy_anatomic_site[omfEvent]
            omfOffset = tbl.omfSub$days_to_other_malignancy_dx[omfEvent]
            histology <- tbl.omfSub$other_malignancy_histological_type[omfEvent]
            
            if(disease   == "[Not Available]" | disease == "[Pending]") disease = NA
            if(histology == "[Not Available]") histology = NA
            if(omfOffset == "[Not Available]" | omfOffset == "[Pending]"){ omf.date = NA
            }else{  omf.date = reformatDate(as.Date(diagnosis.date, "%m/%d/%Y") + as.integer(omfOffset))}
            
            new.event <- list(PatientID=patient.id,
            PtNum=patient.number,
            study=study,
            Name=name,
            Fields = list(date=omf.date, disease=disease, histology=histology,bucket=histology, collection=NA, T.Stage=NA, N.Stage=NA, M.Stage=NA,S.Stage=NA,staging.System=NA))
            
            good.records.found <- good.records.found + 1
            result[[good.records.found]] <- new.event
        } }
    
    
    result[1:good.records.found]
    
} # create.Pathology.record
#------------------------------------------------------------------------------------------------------------------------------------------
    tbl.good <- subset(tbl.pt, bcr_patient_barcode %in% patient.ids )
    tbl.omfSub <- subset(tbl.omf,bcr_patient_barcode %in% patient.ids )
    ids <- unique(tbl.good$bcr_patient_barcode)   # 432
    
    count <- 1
    result <- vector("list", nrow(tbl.good))
    for(id in ids){
        #printf("id: %s", id)
        new.list <- create.Pathology.record(id)
        range <- count:(count+length(new.list)-1)
        result[range] <- new.list
        count <- count + length(new.list)
    } # for id
    
    # some number of the expected events will fail, often (always?) because
    # one or both dates is "[Not Available]".  count tells us how many good
    # we found
    deleters <- which(unlist(lapply(result, is.null)))
deleters
dim(tbl.good)
dim(tbl.omfSub)
tbl.omfSub[1,]
 x <- create.Pathology.record("TCGA-A6-2677")
x
 x <- create.Pathology.record("TCGA-A6-2677") #has omf
    checkEquals(x[[1]], list(PatientID="TCGA.A6.2677", PtNum=10, study=study, Name="Pathology",Fields=list(date="01/01/2009",  disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection="prospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage IIIC", staging.System="6th")))
tbl.good[100,[
tbl.good[100,]
checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection","T.Stage","N.Stage","M.Stage","S.Stage", "staging.System"))
x
x <- create.Pathology.record("TCGA-AA-3660")
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection","T.Stage","N.Stage","M.Stage","S.Stage", "staging.System"))
    checkEquals(x[[1]], list(PatientID="TCGA.A6.2677", PtNum=10, study=study, Name="Pathology", Fields=list(date="01/01/2009", disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection="prospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage IIIC", staging.System="6th")))
    
    x <- create.Pathology.record("TCGA-A6-2677") #has omf
    checkEquals(x[[1]], list(PatientID="TCGA.A6.2677", PtNum=10, study=study, Name="Pathology",Fields=list(date="01/01/2009",  disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection="prospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage IIIC", staging.System="6th")))
x <- create.Pathology.record("TCGA-AA-3660")
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection","T.Stage","N.Stage","M.Stage","S.Stage", "staging.System"))
x
checkEquals(x[[1]], list(PatientID="TCGA.A6.2677", PtNum=10, study=study, Name="Pathology", Fields=list(date="01/01/2009", disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection= "retrospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage IIIC", staging.System="6th")))
print("--- test_create.Pathology.record")
    x <- create.Pathology.record("TCGA-AA-3660")
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection","T.Stage","N.Stage","M.Stage","S.Stage", "staging.System"))
    checkEquals(x[[1]], list(PatientID="TCGA.A6.2677", PtNum=10, study=study, Name="Pathology", Fields=list(date="01/01/2009", disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection= "retrospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage II", staging.System="5th")))
    
    x <- create.Pathology.record("TCGA-A6-2677") #has omf
    checkEquals(x[[1]], list(PatientID="TCGA.A6.2677", PtNum=10, study=study, Name="Pathology",Fields=list(date="01/01/2009",  disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection="prospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage IIIC", staging.System="6th")))
x <- create.Pathology.record("TCGA-AA-3660")
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection","T.Stage","N.Stage","M.Stage","S.Stage", "staging.System"))
    checkEquals(x[[1]], list(PatientID="TCGA.A6.2677", PtNum=10, study=study, Name="Pathology", Fields=list(date="01/01/2009", disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection= "retrospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage II", staging.System="5th")))
x
x <- create.Pathology.record("TCGA-AA-3660")
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection","T.Stage","N.Stage","M.Stage","S.Stage", "staging.System"))
    checkEquals(x[[1]], list(PatientID="TCGA.A6.2677", PtNum=10, study=study, Name="Pathology", Fields=list(date="01/01/2005", disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection= "retrospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage II", staging.System="5th")))
x
 checkEquals(x[[1]], list(PatientID="TCGA.A6.2677", PtNum=100, study=study, Name="Pathology", Fields=list(date="01/01/2005", disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection= "retrospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage II", staging.System="5th")))
    
checkEquals(x[[1]], list(PatientID="TCGA.AA.3660", PtNum=100, study=study, Name="Pathology", Fields=list(date="01/01/2005", disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection= "retrospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage II", staging.System="5th")))
x <- create.Pathology.record("TCGA-AA-3660")
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection","T.Stage","N.Stage","M.Stage","S.Stage", "staging.System"))
    checkEquals(x[[1]], list(PatientID="TCGA.AA.3660", PtNum=100, study=study, Name="Pathology", Fields=list(date="01/01/2005", disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection= "retrospective", T.Stage="T3",N.Stage="N0",M.Stage="M0",S.Stage="Stage II", staging.System="5th")))
 print("--- test_create.Pathology.record")
    x <- create.Pathology.record("TCGA-AA-3660")
    checkTrue(is.list(x))
    checkEquals(names(x[[1]]), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x[[1]][["Fields"]]), c("date", "disease", "histology","bucket","collection","T.Stage","N.Stage","M.Stage","S.Stage", "staging.System"))
    checkEquals(x[[1]], list(PatientID="TCGA.AA.3660", PtNum=100, study=study, Name="Pathology", Fields=list(date="01/01/2005", disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection= "retrospective", T.Stage="T3",N.Stage="N0",M.Stage="M0",S.Stage="Stage II", staging.System="5th")))
    
    x <- create.Pathology.record("TCGA-A6-2677") #has omf
    checkEquals(x[[1]], list(PatientID="TCGA.A6.2677", PtNum=10, study=study, Name="Pathology",Fields=list(date="01/01/2009",  disease="Colon", histology="Colon Adenocarcinoma",bucket="Colon Adenocarcinoma", collection="prospective", T.Stage="T3",N.Stage="N2",M.Stage="M0",S.Stage="Stage IIIC", staging.System="6th")))
q()
