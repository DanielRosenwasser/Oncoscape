                }else{status.offset <-   as.integer(row["death_days_to"])}
            } else{ if(is.na(status.offset) || row["last_contact_days_to"] > status.offset) {
                vital= row[["vital_status"]]
                if(tbl.fu.row$last_contact_days_to == "[Not Available]"){
                    status.offset = NA}else{status.offset <- as.integer(row["last_contact_days_to"])}
            }
        }
            tumorStatus = row["tumor_status"]
        }}
        
    }
    if(is.na(diagnosis.date) || is.na(status.offset)){
        date = NA
    }else{
        date <- reformatDate(format(diagnosis.date + status.offset))
    }
    if(tumorStatus == "[Not Available]" || tumorStatus == "[Unknown]"){ tumorStatus=NA
    }else{ tumorStatus = tolower(tumorStatus) }
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
   return(list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields=list(date=date, status= vital, tumorStatus=tumorStatus)))
   
} # create.status.record
#----------------------
status.events <- lapply(patient.ids, create.status.record)
procedure.events <- create.all.Procedure.records(patient.ids)
background.events <- create.all.Background.records(patient.ids)
    tests.events <- create.all.Tests.records(patient.ids)
status.events <- lapply(patient.ids, create.status.record)#
absent.events <- create.all.Absent.records (patient.ids)#
x <- create.status.record(tcga.ids[1])
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x$Fields), c("date", "status", "tumorStatus"))
    checkEquals(x, list(PatientID="TCGA.18.3406", PtNum=1, study=study, Name="Status", Fields=list(date="01/07/2004", status="Dead", tumorStatus="with tumor")))
    
    x <- create.status.record("TCGA-63-5128") #tbl.pt.row$death_days_to == "[Not Available]"
    checkEquals(x, list(PatientID="TCGA.63.5128", PtNum=253, study=study, Name="Status", Fields=list(date=NA, status="Dead", tumorStatus="with tumor")))
for(i in 1:length(ids)){
create.status.record(ids[i])}
i
ids[12]
patient.id <- "TCGA-NC-A5HI"
tbl.pt.row <- subset(tbl.pt, bcr_patient_barcode==patient.id)
   name <- "Status"
   
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   if( diagnosis.year == "[Not Available]"){
       diagnosis.year = NA
       diagnosis.date = NA
   }else{
       diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   }
   vital <- tbl.pt.row$vital_status
   tumorStatus <- tbl.pt.row$tumor_status
tbl.pt.row
diagnosis.date
vital
turmoStatus
tumorStatus
if(vital == "Dead"){
        if (tbl.pt.row$death_days_to == "[Not Available]" || tbl.pt.row$death_days_to == "[Not Applicable]"){
           status.offset = NA
        }else{
           status.offset <-   as.integer(tbl.pt.row$death_days_to)
        }
    } 
vital
tbl.pt.row$last_contact_days_to == "[Not Available]"
status.offset <-   as.integer(tbl.pt.row$last_contact_days_to)
status.offset
tbl.fu.rows <- subset(tbl.f1, bcr_patient_barcode==patient.id)
tbl.fu.rows
nrow(tbl.fu.rows) != 0 
nrow(tbl.fu.rows)
i =1 
row <- tbl.fu.rows[i, ]
row["vital_status"]=="Dead"
if(is.na(status.offset) || row["last_contact_days_to"] > status.offset
)
is.na(status.offset)
row["last_contact_days_to"] > status.offset
is.na(status.offset) || row["last_contact_days_to"] > status.offset
vital= row[["vital_status"]]
vital
vital= row[["vital_status"]]
tbl.fu.row$last_contact_days_to == "[Not Available]"
row$last_contact_days_to == "[Not Available]"
row$last_contact_days_to
create.status.record <- function(patient.id)
{
   tbl.pt.row <- subset(tbl.pt, bcr_patient_barcode==patient.id)
   name <- "Status"
   
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   if( diagnosis.year == "[Not Available]"){
       diagnosis.year = NA
       diagnosis.date = NA
   }else{
       diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   }
   vital <- tbl.pt.row$vital_status
   tumorStatus <- tbl.pt.row$tumor_status
    if(vital == "Dead"){
        if (tbl.pt.row$death_days_to == "[Not Available]" || tbl.pt.row$death_days_to == "[Not Applicable]"){
           status.offset = NA
        }else{
           status.offset <-   as.integer(tbl.pt.row$death_days_to)
        }
    } else{
        if(tbl.pt.row$last_contact_days_to == "[Not Available]"){
            status.offset = NA
        }else{status.offset <-   as.integer(tbl.pt.row$last_contact_days_to)}
        
        tbl.fu.rows <- subset(tbl.f1, bcr_patient_barcode==patient.id)
        if(nrow(tbl.fu.rows) != 0 ){
          for(i in 1:nrow(tbl.fu.rows)){
            row <- tbl.fu.rows[i, ]
            if(row["vital_status"]=="Dead"){ 
                vital= row[["vital_status"]]
                if (tbl.fu.row$death_days_to == "[Not Available]" || tbl.fu.row$death_days_to == "[Not Applicable]"){
                    status.offset = NA
                }else{status.offset <-   as.integer(row["death_days_to"])}
            } else{
                if(is.na(status.offset) || row["last_contact_days_to"] > status.offset) {
                vital= row[["vital_status"]]
                if(row$last_contact_days_to == "[Not Available]"){
                    status.offset = NA
                }else{status.offset <- as.integer(row["last_contact_days_to"])}
            }
        }
            tumorStatus = row["tumor_status"]
        }}
        
    }
    if(is.na(diagnosis.date) || is.na(status.offset)){
        date = NA
    }else{
        date <- reformatDate(format(diagnosis.date + status.offset))
    }
    if(tumorStatus == "[Not Available]" || tumorStatus == "[Unknown]"){ tumorStatus=NA
    }else{ tumorStatus = tolower(tumorStatus) }
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
   return(list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields=list(date=date, status= vital, tumorStatus=tumorStatus)))
   
} # create.status.record
#-------
 x <- create.status.record(tcga.ids[1])
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x$Fields), c("date", "status", "tumorStatus"))
    checkEquals(x, list(PatientID="TCGA.18.3406", PtNum=1, study=study, Name="Status", Fields=list(date="01/07/2004", status="Dead", tumorStatus="with tumor")))
    
    x <- create.status.record("TCGA-63-5128") #tbl.pt.row$death_days_to == "[Not Available]"
    checkEquals(x, list(PatientID="TCGA.63.5128", PtNum=253, study=study, Name="Status", Fields=list(date=NA, status="Dead", tumorStatus="with tumor")))
    x <- create.status.record("TCGA-NC-A5HI")
x
test_create.status.record <- function()
{
    print("--- test_create.status.record")
    x <- create.status.record(tcga.ids[1])
    checkTrue(is.list(x))
    checkEquals(names(x), c("PatientID", "PtNum", "study", "Name", "Fields"))
    checkEquals(names(x$Fields), c("date", "status", "tumorStatus"))
    checkEquals(x, list(PatientID="TCGA.18.3406", PtNum=1, study=study, Name="Status", Fields=list(date="01/07/2004", status="Dead", tumorStatus="with tumor")))
    
    x <- create.status.record("TCGA-63-5128") #tbl.pt.row$death_days_to == "[Not Available]"
    checkEquals(x, list(PatientID="TCGA.63.5128", PtNum=253, study=study, Name="Status", Fields=list(date=NA, status="Dead", tumorStatus="with tumor")))
    x <- create.status.record("TCGA-NC-A5HI")
    checkEquals(x, list(PatientID="TCGA.NC.A5HI", PtNum=473, study=study, Name="Status", Fields=list(date="10/12/2012", status="Alive", tumorStatus="tumor free")))
} # test_create.status.record
#------------------------------------------------------------------------------------------------------------------------
# emulate this:  el
runTests <- function()
{
   test_create.DOB.record()
   test_create.Chemo.record()
   test_create.Diagnosis.record()
   test_create.status.record()
   test_create.Progression.record()
   test_create.Radiation.record()
   test_create.Procedure.record()
   test_create.Encounter.record()
   test_create.Pathology.record()
   test_create.Absent.record()
   test_create.Background.record()
   test_create.Tests.record()
} # runTests
#------------------------------------------------------------------------------------------------------------------------
# emulate this:      $PatientID
runTests()
parseEvents = function(patient.ids=NA)
{
   
    dob.events <- lapply(patient.ids, function(id) create.DOB.record(id))
    diagnosis.events <- create.all.Diagnosis.records(patient.ids)
    chemo.events <- create.all.Chemo.records(patient.ids)
    radiation.events <- create.all.Radiation.records(patient.ids)
    
    encounter.events <- create.all.Encounter.records(patient.ids)
    pathology.events <- create.all.Pathology.records(patient.ids)
    progression.events <- create.all.Progression.records(patient.ids)
    
    status.events <- lapply(patient.ids, create.status.record)#
    procedure.events <- create.all.Procedure.records(patient.ids)
    absent.events <- create.all.Absent.records (patient.ids)#
    background.events <- create.all.Background.records(patient.ids)
    tests.events <- create.all.Tests.records(patient.ids)
# lusc surgery at time of Dx & not reported, but other post/pre surgeries in other tables
    events <- append(dob.events, chemo.events)
    events <- append(events, diagnosis.events)
    events <- append(events, status.events)
    events <- append(events, progression.events)
    events <- append(events, radiation.events)
    events <- append(events, procedure.events)
    events <- append(events, encounter.events)
    events <- append(events, pathology.events)
   
    events <- append(events, absent.events)
    events <- append(events, background.events)
    events <- append(events, tests.events)
#    printf("found %d events for %d patients", length(events), length(patient.ids))
    print(table(unlist(lapply(events, function(e) e["Name"]))))
    
    events
} # parseEvents
#---------------------------------------------
 patients <- tcga.ids
   
   patients <- gsub("\\.", "\\-", patients)
   checkTrue(all(patients %in% tbl.pt[,2]))
   
   history <- parseEvents(patients)
 
for(i in 1:length(ids)){
create.status.record(ids[i])}
i
ids[31]
patient.id <- ids[31]
tbl.pt.row <- subset(tbl.pt, bcr_patient_barcode==patient.id)
   
tbl.pt.row
name <- "Status"
   
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   if( diagnosis.year == "[Not Available]"){
       diagnosis.year = NA
       diagnosis.date = NA
   }else{
       diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   }
diagnosis.date
 vital <- tbl.pt.row$vital_status
   tumorStatus <- tbl.pt.row$tumor_status
vital == "Dead"
tbl.pt.row$last_contact_days_to == "[Not Available]")
tbl.pt.row$last_contact_days_to == "[Not Available]"
status.offset <-   as.integer(tbl.pt.row$last_contact_days_to)
tbl.fu.rows <- subset(tbl.f1, bcr_patient_barcode==patient.id)
nrow(tbl.fu.rows) != 0
for(i in 1:nrow(tbl.fu.rows)){
            row <- tbl.fu.rows[i, ]
            if(row["vital_status"]=="Dead"){ 
                vital= row[["vital_status"]]
                if (tbl.fu.row$death_days_to == "[Not Available]" || tbl.fu.row$death_days_to == "[Not Applicable]"){
                    status.offset = NA
                }else{status.offset <-   as.integer(row["death_days_to"])}
            } else{
                if(is.na(status.offset) || row["last_contact_days_to"] > status.offset) {
                vital= row[["vital_status"]]
                if(row$last_contact_days_to == "[Not Available]"){
                    status.offset = NA
                }else{status.offset <- as.integer(row["last_contact_days_to"])}
            }
        }
            tumorStatus = row["tumor_status"]
        }}
for(i in 1:nrow(tbl.fu.rows)){
                row <- tbl.fu.rows[i, ]
                if(row["vital_status"]=="Dead"){ 
                    vital= row[["vital_status"]]
                    if (tbl.fu.row$death_days_to == "[Not Available]" || tbl.fu.row$death_days_to == "[Not Applicable]"){
                        status.offset = NA
                    }else{status.offset <-   as.integer(row["death_days_to"])}
                } else{
                    if(is.na(status.offset) || row["last_contact_days_to"] > status.offset) {
                    vital= row[["vital_status"]]
                    if(row$last_contact_days_to == "[Not Available]"){
                        status.offset = NA
                    }else{status.offset <- as.integer(row["last_contact_days_to"])}
                }
            }
                tumorStatus = row["tumor_status"]
            }
i
row <- tbl.fu.rows[i, ]
row
row["vital_status"]=="Dead"
vital= row[["vital_status"]]
if (row$death_days_to == "[Not Available]" || row$death_days_to == "[Not Applicable]"){
                        status.offset = NA}
for(i in 1:nrow(tbl.fu.rows)){
                row <- tbl.fu.rows[i, ]
                if(row["vital_status"]=="Dead"){ 
                    vital= row[["vital_status"]]
                    if (row$death_days_to == "[Not Available]" || row$death_days_to == "[Not Applicable]"){
                        status.offset = NA
                    }else{status.offset <-   as.integer(row["death_days_to"])}
                } else{
                    if(is.na(status.offset) || row["last_contact_days_to"] > status.offset) {
                    vital= row[["vital_status"]]
                    if(row$last_contact_days_to == "[Not Available]"){
                        status.offset = NA
                    }else{status.offset <- as.integer(row["last_contact_days_to"])}
                }
            }
                tumorStatus = row["tumor_status"]
            }
create.status.record <- function(patient.id)
{
   tbl.pt.row <- subset(tbl.pt, bcr_patient_barcode==patient.id)
   name <- "Status"
   
   diagnosis.year <- subset(tbl.pt, bcr_patient_barcode==patient.id)$initial_pathologic_dx_year[1]
   if( diagnosis.year == "[Not Available]"){
       diagnosis.year = NA
       diagnosis.date = NA
   }else{
       diagnosis.date <- as.Date(sprintf("%s-%s-%s", diagnosis.year, "01", "01"))
   }
   vital <- tbl.pt.row$vital_status
   tumorStatus <- tbl.pt.row$tumor_status
    if(vital == "Dead"){
        if (tbl.pt.row$death_days_to == "[Not Available]" || tbl.pt.row$death_days_to == "[Not Applicable]"){
           status.offset = NA
        }else{
           status.offset <-   as.integer(tbl.pt.row$death_days_to)
        }
     }else{
        if(tbl.pt.row$last_contact_days_to == "[Not Available]"){
            status.offset = NA
        }else{status.offset <-   as.integer(tbl.pt.row$last_contact_days_to)}
        
        tbl.fu.rows <- subset(tbl.f1, bcr_patient_barcode==patient.id)
        if(nrow(tbl.fu.rows) != 0 ){
              for(i in 1:nrow(tbl.fu.rows)){
                row <- tbl.fu.rows[i, ]
                if(row["vital_status"]=="Dead"){ 
                    vital= row[["vital_status"]]
                    if (row$death_days_to == "[Not Available]" || row$death_days_to == "[Not Applicable]"){
                        status.offset = NA
                    }else{status.offset <-   as.integer(row["death_days_to"])}
                } else{
                    if(is.na(status.offset) || row["last_contact_days_to"] > status.offset) {
                    vital= row[["vital_status"]]
                    if(row$last_contact_days_to == "[Not Available]"){
                        status.offset = NA
                    }else{status.offset <- as.integer(row["last_contact_days_to"])}
                }
            }
                tumorStatus = row["tumor_status"]
            }
        }
        
    }
    if(is.na(diagnosis.date) || is.na(status.offset)){
        date = NA
    }else{
        date <- reformatDate(format(diagnosis.date + status.offset))
    }
    if(tumorStatus == "[Not Available]" || tumorStatus == "[Unknown]"){ tumorStatus=NA
    }else{ tumorStatus = tolower(tumorStatus) }
    patient.id <- gsub("-", ".", patient.id, fixed=TRUE)
    patient.number <- as.integer(id.map[patient.id])
   return(list(PatientID=patient.id, PtNum=patient.number, study=study, Name=name, Fields=list(date=date, status= vital, tumorStatus=tumorStatus)))
   
} # create.status.record
#---
x <- create.status.record("TCGA-NC-A5HI")
    checkEquals(x, list(PatientID="TCGA.NC.A5HI", PtNum=473, study=study, Name="Status", Fields=list(date="10/12/2012", status="Alive", tumorStatus="tumor free")))
patients <- tcga.ids
   
   patients <- gsub("\\.", "\\-", patients)
   checkTrue(all(patients %in% tbl.pt[,2]))
   
   history <- parseEvents(patients)
 
create.all.Absent.records <- functsion(patient.ids)
{
   tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   #tbl.f2Sub  <- subset(tbl.f2,  bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   tbl.ptSub <- subset(tbl.pt, bcr_patient_barcode==patient.id & pulmonary_function_test_indicator == "NO")
   
  ids <- unique(c(tbl.nteSub$bcr_patient_barcode, tbl.ptSub$bcr_patient_barcode, tbl.omfSub$bcr_patient_barcode))
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Absent.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
    deleters <- which(unlist(lapply(result, is.null)))
    if(length(deleters) > 0)
        result <- result[-deleters]
    result
} # create.all.Pathology.records
#----------------------------------------------
patients <- tcga.ids
   
   patients <- gsub("\\.", "\\-", patients)
   checkTrue(all(patients %in% tbl.pt[,2]))
   
   history <- parseEvents(patients)
 
create.all.Acreate.all.Absent.records <- function(patient.ids)
{
   tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   #tbl.f2Sub  <- subset(tbl.f2,  bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   tbl.ptSub <- subset(tbl.pt, bcr_patient_barcode==patient.id & pulmonary_function_test_indicator == "NO")
   
  ids <- unique(c(tbl.nteSub$bcr_patient_barcode, tbl.ptSub$bcr_patient_barcode, tbl.omfSub$bcr_patient_barcode))
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Absent.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
    deleters <- which(unlist(lapply(result, is.null)))
    if(length(deleters) > 0)
        result <- result[-deleters]
    result
} # create.all.Pathology.records
#------------------------------create.all.Absent.records <- function(patient.ids)
{
   tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   #tbl.f2Sub  <- subset(tbl.f2,  bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   tbl.ptSub <- subset(tbl.pt, bcr_patient_barcode==patient.id & pulmonary_function_test_indicator == "NO")
   
  ids <- unique(c(tbl.nteSub$bcr_patient_barcode, tbl.ptSub$bcr_patient_barcode, tbl.omfSub$bcr_patient_barcode))
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Absent.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
    deleters <- which(unlist(lapply(result, is.null)))
    if(length(deleters) > 0)
        result <- result[-deleters]
    result
} # create.all.Pathology.records
#------------------------------
create.all.Absent.records <- function(patient.ids)
{
   tbl.nteSub <- subset(tbl.nte, bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   #tbl.f2Sub  <- subset(tbl.f2,  bcr_patient_barcode %in% patient.ids & new_tumor_event_dx_days_to != "[Not Available]" & (new_tumor_event_pharmaceutical_tx == "NO" | new_tumor_event_radiation_tx == "NO"))
   tbl.omfSub <- subset(tbl.omf, bcr_patient_barcode %in% patient.ids & days_to_other_malignancy_dx != "[Not Available]" & (drug_tx_indicator == "NO" | radiation_tx_indicator == "NO"))
   tbl.ptSub <- subset(tbl.pt, bcr_patient_barcode==patient.id & pulmonary_function_test_indicator == "NO")
   
  ids <- unique(c(tbl.nteSub$bcr_patient_barcode, tbl.ptSub$bcr_patient_barcode, tbl.omfSub$bcr_patient_barcode))
  count <- 1
  result <- vector("list", length(ids))
  for(id in ids){
     #printf("id: %s", id)
     new.list <- create.Absent.record(id)
     range <- count:(count+length(new.list)-1)
     result[range] <- new.list
     count <- count + length(new.list)
     } # for id
    deleters <- which(unlist(lapply(result, is.null)))
    if(length(deleters) > 0)
        result <- result[-deleters]
    result
} # create.all.Pathology.records
#------------------------------
 patients <- tcga.ids
   
   patients <- gsub("\\.", "\\-", patients)
   checkTrue(all(patients %in% tbl.pt[,2]))
   
   history <- parseEvents(patients)
 
length(history)
checkEquals(length(history), 5243)
   checkEquals(as.list(table(unlist(lapply(history, function(e) e["Name"])))), list(`Absent`=47, `Birth`=488, `Diagnosis`=495,`Drug`=31`,`Encounter`=1333, `History`= 570, `Pathology`=570, `Procedure`=67, `Progression`=25,  `Radiation`=77, `Status`=495, `Tests`= 830))
      #omf: other malignancy form for 2 patients gives extra pathologies
      # many additional surgeries marked (new_tumor_event_additional_surgery_procedure = YES) but no date given
      
   serialized.file.name <- "../../extdata/history.RData"
   #printf("saving history to %s", serialized.file.name)
   
   save(history, file=serialized.file.name)
 checkEquals(as.list(table(unlist(lapply(history, function(e) e["Name"])))), list(`Absent`=47,`Background`=488, `Birth`=495, `Diagnosis`=495,`Drug`=31`,`Encounter`=1333, `History`= 570, `Pathology`=570, `Procedure`=67, `Progression`=25,  `Radiation`=77, `Status`=495, `Tests`= 830))
      #omf: other malignancy form for 2 patients gives extra pathologies
      # many additional surgeries marked (new_tumor_event_additional_surgery_procedure = YES) but no date given
      
   serialized.file.name <- "../../extdata/history.RData"
   #printf("saving history to %s", serialized.file.name)
   
   save(history, file=serialized.file.name)
q()
